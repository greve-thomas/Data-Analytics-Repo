<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20204.21.0114.0916                               -->
<workbook original-version='18.1' source-build='2020.4.1 (20204.21.0114.0916)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Data Set- Inc5000 Company List_2014' inline='true' name='federated.0ormmsw1x308jq18vwd6h1jafeu3' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Data Set- Inc5000 Company List_2014' name='textscan.07d9jm61kc88jz19wrac10saq6bj'>
            <connection class='textscan' directory='C:/Users/thoma/Documents/!DESALES/2021 SPRING/MG 226- Intro to DA and AI' filename='Data Set- Inc5000 Company List_2014.csv' password='' port='0' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.07d9jm61kc88jz19wrac10saq6bj' name='Data Set- Inc5000 Company List_2014.csv' table='[Data Set- Inc5000 Company List_2014#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='_input' ordinal='0' />
            <column datatype='integer' name='_num' ordinal='1' />
            <column datatype='string' name='_widgetName' ordinal='2' />
            <column datatype='string' name='_source' ordinal='3' />
            <column datatype='integer' name='_resultNumber' ordinal='4' />
            <column datatype='string' name='_pageUrl' ordinal='5' />
            <column datatype='integer' name='id' ordinal='6' />
            <column datatype='integer' name='rank' ordinal='7' />
            <column datatype='integer' name='workers' ordinal='8' />
            <column datatype='string' name='company' ordinal='9' />
            <column datatype='string' name='url' ordinal='10' />
            <column datatype='string' name='state_l' ordinal='11' />
            <column datatype='string' name='state_s' ordinal='12' />
            <column datatype='string' name='city' ordinal='13' />
            <column datatype='string' name='metro' ordinal='14' />
            <column datatype='real' name='growth' ordinal='15' />
            <column datatype='integer' name='revenue' ordinal='16' />
            <column datatype='string' name='industry' ordinal='17' />
            <column datatype='integer' name='yrs_on_list' ordinal='18' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='textscan.07d9jm61kc88jz19wrac10saq6bj' name='Data Set- Inc5000 Company List_2014.csv' table='[Data Set- Inc5000 Company List_2014#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='_input' ordinal='0' />
            <column datatype='integer' name='_num' ordinal='1' />
            <column datatype='string' name='_widgetName' ordinal='2' />
            <column datatype='string' name='_source' ordinal='3' />
            <column datatype='integer' name='_resultNumber' ordinal='4' />
            <column datatype='string' name='_pageUrl' ordinal='5' />
            <column datatype='integer' name='id' ordinal='6' />
            <column datatype='integer' name='rank' ordinal='7' />
            <column datatype='integer' name='workers' ordinal='8' />
            <column datatype='string' name='company' ordinal='9' />
            <column datatype='string' name='url' ordinal='10' />
            <column datatype='string' name='state_l' ordinal='11' />
            <column datatype='string' name='state_s' ordinal='12' />
            <column datatype='string' name='city' ordinal='13' />
            <column datatype='string' name='metro' ordinal='14' />
            <column datatype='real' name='growth' ordinal='15' />
            <column datatype='integer' name='revenue' ordinal='16' />
            <column datatype='string' name='industry' ordinal='17' />
            <column datatype='integer' name='yrs_on_list' ordinal='18' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Data Set- Inc5000 Company List_2014.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>_input</remote-name>
            <remote-type>129</remote-type>
            <local-name>[_input]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_2014.csv]</parent-name>
            <remote-alias>_input</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data Set- Inc5000 Company List_2014.csv_01183D4C8C944F1C9635839C6F727DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>_num</remote-name>
            <remote-type>20</remote-type>
            <local-name>[_num]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_2014.csv]</parent-name>
            <remote-alias>_num</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data Set- Inc5000 Company List_2014.csv_01183D4C8C944F1C9635839C6F727DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>_widgetName</remote-name>
            <remote-type>129</remote-type>
            <local-name>[_widgetName]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_2014.csv]</parent-name>
            <remote-alias>_widgetName</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data Set- Inc5000 Company List_2014.csv_01183D4C8C944F1C9635839C6F727DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>_source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[_source]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_2014.csv]</parent-name>
            <remote-alias>_source</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data Set- Inc5000 Company List_2014.csv_01183D4C8C944F1C9635839C6F727DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>_resultNumber</remote-name>
            <remote-type>20</remote-type>
            <local-name>[_resultNumber]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_2014.csv]</parent-name>
            <remote-alias>_resultNumber</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data Set- Inc5000 Company List_2014.csv_01183D4C8C944F1C9635839C6F727DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>_pageUrl</remote-name>
            <remote-type>129</remote-type>
            <local-name>[_pageUrl]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_2014.csv]</parent-name>
            <remote-alias>_pageUrl</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data Set- Inc5000 Company List_2014.csv_01183D4C8C944F1C9635839C6F727DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_2014.csv]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data Set- Inc5000 Company List_2014.csv_01183D4C8C944F1C9635839C6F727DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>rank</remote-name>
            <remote-type>20</remote-type>
            <local-name>[rank]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_2014.csv]</parent-name>
            <remote-alias>rank</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data Set- Inc5000 Company List_2014.csv_01183D4C8C944F1C9635839C6F727DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>workers</remote-name>
            <remote-type>20</remote-type>
            <local-name>[workers]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_2014.csv]</parent-name>
            <remote-alias>workers</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data Set- Inc5000 Company List_2014.csv_01183D4C8C944F1C9635839C6F727DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>company</remote-name>
            <remote-type>129</remote-type>
            <local-name>[company]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_2014.csv]</parent-name>
            <remote-alias>company</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data Set- Inc5000 Company List_2014.csv_01183D4C8C944F1C9635839C6F727DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>url</remote-name>
            <remote-type>129</remote-type>
            <local-name>[url]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_2014.csv]</parent-name>
            <remote-alias>url</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data Set- Inc5000 Company List_2014.csv_01183D4C8C944F1C9635839C6F727DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_l</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_l]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_2014.csv]</parent-name>
            <remote-alias>state_l</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data Set- Inc5000 Company List_2014.csv_01183D4C8C944F1C9635839C6F727DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>state_s</remote-name>
            <remote-type>129</remote-type>
            <local-name>[state_s]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_2014.csv]</parent-name>
            <remote-alias>state_s</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data Set- Inc5000 Company List_2014.csv_01183D4C8C944F1C9635839C6F727DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>city</remote-name>
            <remote-type>129</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_2014.csv]</parent-name>
            <remote-alias>city</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data Set- Inc5000 Company List_2014.csv_01183D4C8C944F1C9635839C6F727DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>metro</remote-name>
            <remote-type>129</remote-type>
            <local-name>[metro]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_2014.csv]</parent-name>
            <remote-alias>metro</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data Set- Inc5000 Company List_2014.csv_01183D4C8C944F1C9635839C6F727DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>growth</remote-name>
            <remote-type>5</remote-type>
            <local-name>[growth]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_2014.csv]</parent-name>
            <remote-alias>growth</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data Set- Inc5000 Company List_2014.csv_01183D4C8C944F1C9635839C6F727DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>revenue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[revenue]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_2014.csv]</parent-name>
            <remote-alias>revenue</remote-alias>
            <ordinal>16</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data Set- Inc5000 Company List_2014.csv_01183D4C8C944F1C9635839C6F727DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>industry</remote-name>
            <remote-type>129</remote-type>
            <local-name>[industry]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_2014.csv]</parent-name>
            <remote-alias>industry</remote-alias>
            <ordinal>17</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data Set- Inc5000 Company List_2014.csv_01183D4C8C944F1C9635839C6F727DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>yrs_on_list</remote-name>
            <remote-type>20</remote-type>
            <local-name>[yrs_on_list]</local-name>
            <parent-name>[Data Set- Inc5000 Company List_2014.csv]</parent-name>
            <remote-alias>yrs_on_list</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Data Set- Inc5000 Company List_2014.csv_01183D4C8C944F1C9635839C6F727DF6]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Ranking of Rank' datatype='integer' name='[Calculation_1507580013929242624]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(AVG([rank]),&apos;asc&apos;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Ranking of Revenue' datatype='integer' name='[Calculation_1507580013932060674]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(AVG([revenue]),&apos;desc&apos;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Rank of # of Companies' datatype='integer' name='[Calculation_1507580013936734212]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(COUNTD([state_l]),&apos;desc&apos;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Ranking Calculation' datatype='string' name='[Calculation_1507580014014570501]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF &#13;&#10;AVG([rank])&gt;2500 &#13;&#10;THEN &quot;Below Average&quot;&#13;&#10;ELSEIF&#13;&#10;AVG([rank])&lt;2500&#13;&#10;THEN &quot;Above Average&quot;&#13;&#10;END' />
      </column>
      <column caption='Revenue per Employee' datatype='real' name='[Calculation_701717154596216832]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='AVG([revenue])/AVG([workers])' />
      </column>
      <column caption='Revenue Calculation' datatype='string' name='[Ranking Calculation (copy)_1507580014017179654]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF &#13;&#10;AVG([revenue])&gt;36826942&#13;&#10;THEN &quot;Below Average&quot;&#13;&#10;ELSEIF&#13;&#10;AVG([revenue])&lt;36826942&#13;&#10;THEN &quot;Above Average&quot;&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Region]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[state_l]' new-bin='true'>
          <bin default-name='false' value='&quot;Central&quot;'>
            <value>&quot;Alabama&quot;</value>
            <value>&quot;Arkansas&quot;</value>
            <value>&quot;Illinois&quot;</value>
            <value>&quot;Indiana&quot;</value>
            <value>&quot;Iowa&quot;</value>
            <value>&quot;Kansas&quot;</value>
            <value>&quot;Kentucky&quot;</value>
            <value>&quot;Louisiana&quot;</value>
            <value>&quot;Michigan&quot;</value>
            <value>&quot;Minnesota&quot;</value>
            <value>&quot;Mississippi&quot;</value>
            <value>&quot;Missouri&quot;</value>
            <value>&quot;Nebraska&quot;</value>
            <value>&quot;North Dakota&quot;</value>
            <value>&quot;Ohio&quot;</value>
            <value>&quot;Oklahoma&quot;</value>
            <value>&quot;South Dakota&quot;</value>
            <value>&quot;Tennessee&quot;</value>
            <value>&quot;Texas&quot;</value>
            <value>&quot;Wisconsin&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;East&quot;'>
            <value>&quot;Connecticut&quot;</value>
            <value>&quot;Delaware&quot;</value>
            <value>&quot;District of Columbia&quot;</value>
            <value>&quot;Florida&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;Maine&quot;</value>
            <value>&quot;Maryland&quot;</value>
            <value>&quot;Massachusetts&quot;</value>
            <value>&quot;New Hampshire&quot;</value>
            <value>&quot;New Jersey&quot;</value>
            <value>&quot;New York&quot;</value>
            <value>&quot;North Carolina&quot;</value>
            <value>&quot;Pennsylvania&quot;</value>
            <value>&quot;Puerto Rico&quot;</value>
            <value>&quot;Rhode Island&quot;</value>
            <value>&quot;South Carolina&quot;</value>
            <value>&quot;Vermont&quot;</value>
            <value>&quot;Virginia&quot;</value>
            <value>&quot;West Virginia&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;West&quot;'>
            <value>&quot;Alaska&quot;</value>
            <value>&quot;Arizona&quot;</value>
            <value>&quot;California&quot;</value>
            <value>&quot;Colorado&quot;</value>
            <value>&quot;Hawaii&quot;</value>
            <value>&quot;Idaho&quot;</value>
            <value>&quot;Montana&quot;</value>
            <value>&quot;Nevada&quot;</value>
            <value>&quot;New Mexico&quot;</value>
            <value>&quot;Oregon&quot;</value>
            <value>&quot;Utah&quot;</value>
            <value>&quot;Washington&quot;</value>
          </bin>
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Data Set- Inc5000 Company List_2014.csv' datatype='table' name='[__tableau_internal_object_id__].[Data Set- Inc5000 Company List_2014.csv_01183D4C8C944F1C9635839C6F727DF6]' role='measure' type='quantitative' />
      <column caption='_Input' datatype='string' hidden='true' name='[_input]' role='dimension' type='nominal' />
      <column caption='_Num' datatype='integer' hidden='true' name='[_num]' role='dimension' type='ordinal' />
      <column datatype='string' hidden='true' name='[_pageUrl]' role='dimension' type='nominal' />
      <column caption='Ranking' datatype='integer' name='[_resultNumber]' role='dimension' type='ordinal' />
      <column caption='_Source' datatype='string' name='[_source]' role='dimension' type='nominal' />
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Company' datatype='string' name='[company]' role='dimension' type='nominal' />
      <column caption='Growth' datatype='real' name='[growth]' role='measure' type='quantitative' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Industry' datatype='string' name='[industry]' role='dimension' type='nominal' />
      <column caption='Metro' datatype='string' name='[metro]' role='dimension' type='nominal' />
      <column caption='Rank' datatype='integer' name='[rank]' role='measure' type='quantitative' />
      <column caption='Revenue' datatype='integer' name='[revenue]' role='measure' type='quantitative' />
      <column caption='State' datatype='string' name='[state_l]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='State S' datatype='string' name='[state_s]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Url' datatype='string' hidden='true' name='[url]' role='dimension' type='nominal' />
      <column caption='Workers' datatype='integer' name='[workers]' role='measure' type='quantitative' />
      <column caption='Yrs On List' datatype='integer' name='[yrs_on_list]' role='measure' type='quantitative' />
      <column-instance column='[industry]' derivation='None' name='[none:industry:nk]' pivot='key' type='nominal' />
      <column-instance column='[state_l]' derivation='None' name='[none:state_l:nk]' pivot='key' type='nominal' />
      <column-instance column='[Ranking Calculation (copy)_1507580014017179654]' derivation='User' name='[usr:Ranking Calculation (copy)_1507580014017179654:nk]' pivot='key' type='nominal' />
      <group caption='Action (Region)' hidden='true' name='[Action (Region)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Region]' />
        </groupfilter>
      </group>
      <group caption='Action (State)' hidden='true' name='[Action (State)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[state_l]' />
        </groupfilter>
      </group>
      <group caption='Top and Bottom 5 Industries' delimiter=',' hidden='true' name='[Set 1]' name-style='unqualified'>
        <groupfilter function='union'>
          <groupfilter field='[Top 5 Industries by Growth (copy)]' function='reference' />
          <groupfilter field='[Top and Bottom 5 Industries]' function='reference' />
        </groupfilter>
      </group>
      <group caption='Bottom 5 Industries by Growth' hidden='true' name='[Top 5 Industries by Growth (copy)]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='5' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='AVG([growth])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[industry]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Top 5 Industries by Growth' hidden='true' name='[Top and Bottom 5 Industries]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='AVG([growth])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[industry]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:industry:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Environmental Services&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Advertising &amp; Marketing&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Retail&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Consumer Products &amp; Services&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Travel &amp; Hospitality&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Health&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Financial Services&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Education&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Media&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Business Products &amp; Services&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Security&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Logistics &amp; Transportation&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Energy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Human Resources&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Insurance&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manufacturing&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Real Estate&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Food &amp; Beverage&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Engineering&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Computer Hardware&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Software&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;IT Services&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Government Services&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Construction&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Telecommunications&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:state_l:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Alaska&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Puerto Rico&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hawaii&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Region]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;East&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;West&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Ranking Calculation (copy)_1507580014017179654:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Below Average&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Above Average&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Data Set- Inc5000 Company List_2014.csv' id='Data Set- Inc5000 Company List_2014.csv_01183D4C8C944F1C9635839C6F727DF6'>
            <properties context=''>
              <relation connection='textscan.07d9jm61kc88jz19wrac10saq6bj' name='Data Set- Inc5000 Company List_2014.csv' table='[Data Set- Inc5000 Company List_2014#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='_input' ordinal='0' />
                  <column datatype='integer' name='_num' ordinal='1' />
                  <column datatype='string' name='_widgetName' ordinal='2' />
                  <column datatype='string' name='_source' ordinal='3' />
                  <column datatype='integer' name='_resultNumber' ordinal='4' />
                  <column datatype='string' name='_pageUrl' ordinal='5' />
                  <column datatype='integer' name='id' ordinal='6' />
                  <column datatype='integer' name='rank' ordinal='7' />
                  <column datatype='integer' name='workers' ordinal='8' />
                  <column datatype='string' name='company' ordinal='9' />
                  <column datatype='string' name='url' ordinal='10' />
                  <column datatype='string' name='state_l' ordinal='11' />
                  <column datatype='string' name='state_s' ordinal='12' />
                  <column datatype='string' name='city' ordinal='13' />
                  <column datatype='string' name='metro' ordinal='14' />
                  <column datatype='real' name='growth' ordinal='15' />
                  <column datatype='integer' name='revenue' ordinal='16' />
                  <column datatype='string' name='industry' ordinal='17' />
                  <column datatype='integer' name='yrs_on_list' ordinal='18' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Parameter 1' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
        <calculation class='tableau' formula='1.0' />
      </column>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Select a State Highlight' name='[Action1]'>
      <activation auto-clear='true' type='on-hover' />
      <source dashboard='State Dashboard' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='ATTR(State),State,State S' />
        <param name='target' value='State Dashboard' />
      </command>
    </action>
    <action caption='Zoom Filter' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Companies per State' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Companies per State' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Companies per State'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Companies Per State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data Set- Inc5000 Company List_2014' name='federated.0ormmsw1x308jq18vwd6h1jafeu3' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0ormmsw1x308jq18vwd6h1jafeu3'>
            <column datatype='string' name='[Region]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[state_l]' new-bin='true'>
                <bin default-name='false' value='&quot;Central&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Texas&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;District of Columbia&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[state_l]' derivation='Count' name='[cnt:state_l:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state_l]' derivation='None' name='[none:state_l:nk]' pivot='key' type='nominal' />
            <column-instance column='[state_l]' derivation='Count' name='[rank:cnt:state_l:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0ormmsw1x308jq18vwd6h1jafeu3].[state_l]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column caption='State' datatype='string' name='[state_l]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ormmsw1x308jq18vwd6h1jafeu3].[Region]' filter-group='4'>
            <groupfilter function='member' level='[Region]' member='&quot;Central&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ormmsw1x308jq18vwd6h1jafeu3].[Region]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ormmsw1x308jq18vwd6h1jafeu3].[Longitude (generated)]' field-type='quantitative' max='-7397313.7925057812' min='-14706213.966529205' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0ormmsw1x308jq18vwd6h1jafeu3].[Latitude (generated)]' field-type='quantitative' max='6545573.8427055292' min='2270668.9834271879' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.0ormmsw1x308jq18vwd6h1jafeu3].[cnt:state_l:qk]' palette='green_10_0' type='interpolated' />
            <encoding attr='color' field='[federated.0ormmsw1x308jq18vwd6h1jafeu3].[rank:cnt:state_l:qk]' palette='green_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0ormmsw1x308jq18vwd6h1jafeu3].[cnt:state_l:qk]' />
              <size column='[federated.0ormmsw1x308jq18vwd6h1jafeu3].[cnt:state_l:qk]' />
              <tooltip column='[federated.0ormmsw1x308jq18vwd6h1jafeu3].[rank:cnt:state_l:qk]' />
              <lod column='[federated.0ormmsw1x308jq18vwd6h1jafeu3].[none:state_l:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>State:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ormmsw1x308jq18vwd6h1jafeu3].[none:state_l:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Number of Companies:</run>
                <run bold='true' fontcolor='#000000'><![CDATA[ <[federated.0ormmsw1x308jq18vwd6h1jafeu3].[cnt:state_l:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Rank of # Companies: </run>
                <run bold='true' fontcolor='#000000'><![CDATA[   <[federated.0ormmsw1x308jq18vwd6h1jafeu3].[rank:cnt:state_l:qk]> out of 50]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.8570718765258789' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ormmsw1x308jq18vwd6h1jafeu3].[Latitude (generated)]</rows>
        <cols>[federated.0ormmsw1x308jq18vwd6h1jafeu3].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{206BB6C3-8166-4662-912C-7A4D978F16B8}' />
    </worksheet>
    <worksheet name='Growth by Industry'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Sales Growth by Industry</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Data Set- Inc5000 Company List_2014' name='federated.0ormmsw1x308jq18vwd6h1jafeu3' />
          </datasources>
          <datasource-dependencies datasource='federated.0ormmsw1x308jq18vwd6h1jafeu3'>
            <column-instance column='[growth]' derivation='Avg' name='[avg:growth:qk]' pivot='key' type='quantitative' />
            <column caption='Growth' datatype='real' name='[growth]' role='measure' type='quantitative' />
            <column caption='Industry' datatype='string' name='[industry]' role='dimension' type='nominal' />
            <column-instance column='[industry]' derivation='None' name='[none:industry:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0ormmsw1x308jq18vwd6h1jafeu3].[avg:growth:qk]' value='c&quot;$&quot;#,##0;(&quot;$&quot;#,##0)' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0ormmsw1x308jq18vwd6h1jafeu3].[none:industry:nk]' />
              <size column='[federated.0ormmsw1x308jq18vwd6h1jafeu3].[avg:growth:qk]' />
              <text column='[federated.0ormmsw1x308jq18vwd6h1jafeu3].[none:industry:nk]' />
              <text column='[federated.0ormmsw1x308jq18vwd6h1jafeu3].[avg:growth:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Industry Name:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ormmsw1x308jq18vwd6h1jafeu3].[none:industry:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Growth:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ormmsw1x308jq18vwd6h1jafeu3].[avg:growth:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.31784531474113464' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-transparency' value='132' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{0F4A738F-0726-451C-AFD2-3168F9FF7D60}' />
    </worksheet>
    <worksheet name='Rank of State'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data Set- Inc5000 Company List_2014' name='federated.0ormmsw1x308jq18vwd6h1jafeu3' />
          </datasources>
          <datasource-dependencies datasource='federated.0ormmsw1x308jq18vwd6h1jafeu3'>
            <column caption='Ranking of Rank' datatype='integer' name='[Calculation_1507580013929242624]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(AVG([rank]),&apos;asc&apos;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Ranking Calculation' datatype='string' name='[Calculation_1507580014014570501]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF &#13;&#10;AVG([rank])&gt;2500 &#13;&#10;THEN &quot;Below Average&quot;&#13;&#10;ELSEIF&#13;&#10;AVG([rank])&lt;2500&#13;&#10;THEN &quot;Above Average&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Region]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[state_l]' new-bin='true'>
                <bin default-name='false' value='&quot;Central&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Texas&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;District of Columbia&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[rank]' derivation='Avg' name='[avg:rank:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state_l]' derivation='None' name='[none:state_l:nk]' pivot='key' type='nominal' />
            <column caption='Rank' datatype='integer' name='[rank]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state_l]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1507580013929242624]' derivation='User' name='[usr:Calculation_1507580013929242624:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_1507580014014570501]' derivation='User' name='[usr:Calculation_1507580014014570501:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ormmsw1x308jq18vwd6h1jafeu3].[Region]' filter-group='4'>
            <groupfilter function='member' level='[Region]' member='&quot;Central&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0ormmsw1x308jq18vwd6h1jafeu3].[Region]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0ormmsw1x308jq18vwd6h1jafeu3].[avg:rank:qk]' field-type='quantitative' major-origin='0.0' major-spacing='1000.0' max='4500.0' min='1000.0' minor-origin='0.0' minor-spacing='100.0' range-type='fixed' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.0ormmsw1x308jq18vwd6h1jafeu3].[avg:rank:qk]' scope='rows' value='Avgerage Rank of State' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#f9e9e0' />
            <format attr='fill-below' id='refline0' value='#e8edda' />
            <format attr='stroke-color' id='refline0' value='#606b76' />
            <format attr='vertical-align' id='refline0' value='bottom' />
            <format attr='text-align' id='refline0' value='left' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.0ormmsw1x308jq18vwd6h1jafeu3].[usr:Calculation_1507580014014570501:nk]' />
              <tooltip column='[federated.0ormmsw1x308jq18vwd6h1jafeu3].[usr:Calculation_1507580013929242624:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0ormmsw1x308jq18vwd6h1jafeu3].[avg:rank:qk]' enable-instant-analytics='false' formula='constant' id='refline0' label='Average Rank of ALL States' label-type='custom' scope='per-table' value='2500.0' value-column='[federated.0ormmsw1x308jq18vwd6h1jafeu3].[avg:rank:qk]' z-order='1' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>State:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ormmsw1x308jq18vwd6h1jafeu3].[none:state_l:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Rank:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ormmsw1x308jq18vwd6h1jafeu3].[avg:rank:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Overall Rank:&#9;</run>
                <run bold='true'><![CDATA[ <[federated.0ormmsw1x308jq18vwd6h1jafeu3].[usr:Calculation_1507580013929242624:qk]> out of 51]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0ormmsw1x308jq18vwd6h1jafeu3].[avg:rank:qk]</rows>
        <cols>[federated.0ormmsw1x308jq18vwd6h1jafeu3].[none:state_l:nk]</cols>
      </table>
      <simple-id uuid='{4CB82435-A647-4542-ACAD-3EA0721423B1}' />
    </worksheet>
    <worksheet name='Revenue by State'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data Set- Inc5000 Company List_2014' name='federated.0ormmsw1x308jq18vwd6h1jafeu3' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Parameter 1' datatype='real' name='[Parameter 1]' param-domain-type='any' role='measure' type='quantitative' value='1.0'>
              <calculation class='tableau' formula='1.0' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0ormmsw1x308jq18vwd6h1jafeu3'>
            <column caption='Ranking of Revenue' datatype='integer' name='[Calculation_1507580013932060674]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(AVG([revenue]),&apos;desc&apos;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Revenue Calculation' datatype='string' name='[Ranking Calculation (copy)_1507580014017179654]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF &#13;&#10;AVG([revenue])&gt;36826942&#13;&#10;THEN &quot;Below Average&quot;&#13;&#10;ELSEIF&#13;&#10;AVG([revenue])&lt;36826942&#13;&#10;THEN &quot;Above Average&quot;&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Region]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[state_l]' new-bin='true'>
                <bin default-name='false' value='&quot;Central&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Texas&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;District of Columbia&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Puerto Rico&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                </bin>
              </calculation>
            </column>
            <column-instance column='[state_l]' derivation='Attribute' name='[attr:state_l:nk]' pivot='key' type='nominal' />
            <column-instance column='[revenue]' derivation='Avg' name='[avg:revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[state_s]' derivation='None' name='[none:state_s:nk]' pivot='key' type='nominal' />
            <column caption='Revenue' datatype='integer' name='[revenue]' role='measure' type='quantitative' />
            <column caption='State' datatype='string' name='[state_l]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='State S' datatype='string' name='[state_s]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[Calculation_1507580013932060674]' derivation='User' name='[usr:Calculation_1507580013932060674:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Columns' />
            </column-instance>
            <column-instance column='[Ranking Calculation (copy)_1507580014017179654]' derivation='User' name='[usr:Ranking Calculation (copy)_1507580014017179654:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0ormmsw1x308jq18vwd6h1jafeu3].[Region]' filter-group='4'>
            <groupfilter function='member' level='[Region]' member='&quot;Central&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0ormmsw1x308jq18vwd6h1jafeu3].[none:state_s:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0ormmsw1x308jq18vwd6h1jafeu3].[avg:revenue:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0ormmsw1x308jq18vwd6h1jafeu3].[Region]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='refline'>
            <format attr='fill-above' id='refline0' value='#e8edda' />
            <format attr='fill-below' id='refline0' value='#f5ead7' />
            <format attr='stroke-color' id='refline0' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0ormmsw1x308jq18vwd6h1jafeu3].[usr:Ranking Calculation (copy)_1507580014017179654:nk]' />
              <tooltip column='[federated.0ormmsw1x308jq18vwd6h1jafeu3].[attr:state_l:nk]' />
              <tooltip column='[federated.0ormmsw1x308jq18vwd6h1jafeu3].[usr:Calculation_1507580013932060674:qk]' />
            </encodings>
            <reference-line axis-column='[federated.0ormmsw1x308jq18vwd6h1jafeu3].[avg:revenue:qk]' enable-instant-analytics='true' formula='average' id='refline0' label='Average Revenue' label-type='custom' probability='95' scope='per-pane' value-column='[Parameters].[Parameter 1]' z-order='1' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>State:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ormmsw1x308jq18vwd6h1jafeu3].[attr:state_l:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Revenue:&#9;</run>
                <run bold='true'><![CDATA[<[federated.0ormmsw1x308jq18vwd6h1jafeu3].[avg:revenue:qk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Ranking of Revenue:&#9;</run>
                <run bold='true' fontcolor='#000000'><![CDATA[<[federated.0ormmsw1x308jq18vwd6h1jafeu3].[usr:Calculation_1507580013932060674:qk]> out of 51]]></run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
        </panes>
        <rows>[federated.0ormmsw1x308jq18vwd6h1jafeu3].[none:state_s:nk]</rows>
        <cols>[federated.0ormmsw1x308jq18vwd6h1jafeu3].[avg:revenue:qk]</cols>
      </table>
      <simple-id uuid='{E0F288F1-7C54-4EC3-968F-CDCB64442D9B}' />
    </worksheet>
    <worksheet name='Revenue per Employee'>
      <table>
        <view>
          <datasources>
            <datasource caption='Data Set- Inc5000 Company List_2014' name='federated.0ormmsw1x308jq18vwd6h1jafeu3' />
          </datasources>
          <datasource-dependencies datasource='federated.0ormmsw1x308jq18vwd6h1jafeu3'>
            <column caption='Industry' datatype='string' name='[industry]' role='dimension' type='nominal' />
            <column-instance column='[industry]' derivation='None' name='[none:industry:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0ormmsw1x308jq18vwd6h1jafeu3].[none:industry:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{064956F2-72D1-45F1-9F52-9A4474131155}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='State Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='21' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='15' param='vert' w='98400' x='800' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='6250' id='16' w='98400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='32' h='4000' id='17' is-fixed='true' param='vert' w='98400' x='800' y='7250'>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='3625' id='18' w='98400' x='800' y='7250'>
                  <formatted-text>
                    <run>Hover over a state on the map to find more information about their revenue and average ranking!</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='39' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='38' param='vert' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='6250' id='16' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='3625' id='18' w='98400' x='800' y='7250'>
                  <formatted-text>
                    <run>Hover over a state on the map to find more information about their revenue and average ranking!</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{75EF8D72-FA30-492B-AE5F-368804FE5ABC}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' maximized='true' name='Companies per State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='dropdown' param='[federated.0ormmsw1x308jq18vwd6h1jafeu3].[Region]' type='filter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ormmsw1x308jq18vwd6h1jafeu3].[Region]</field>
            <field>[federated.0ormmsw1x308jq18vwd6h1jafeu3].[avg:revenue:qk]</field>
            <field>[federated.0ormmsw1x308jq18vwd6h1jafeu3].[cnt:state_l:qk]</field>
            <field>[federated.0ormmsw1x308jq18vwd6h1jafeu3].[none:city:nk]</field>
            <field>[federated.0ormmsw1x308jq18vwd6h1jafeu3].[none:id:ok]</field>
            <field>[federated.0ormmsw1x308jq18vwd6h1jafeu3].[none:revenue:qk]</field>
            <field>[federated.0ormmsw1x308jq18vwd6h1jafeu3].[none:state_l:nk]</field>
            <field>[federated.0ormmsw1x308jq18vwd6h1jafeu3].[none:state_s:nk]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='1' />
      </viewpoint>
      <simple-id uuid='{C27A9397-3778-4850-9820-83FAB3750AD3}' />
    </window>
    <window class='worksheet' name='Revenue by State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ormmsw1x308jq18vwd6h1jafeu3].[usr:Ranking Calculation (copy)_1507580014017179654:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ormmsw1x308jq18vwd6h1jafeu3].[Region]</field>
            <field>[federated.0ormmsw1x308jq18vwd6h1jafeu3].[none:industry:nk]</field>
            <field>[federated.0ormmsw1x308jq18vwd6h1jafeu3].[none:state_l:nk]</field>
            <field>[federated.0ormmsw1x308jq18vwd6h1jafeu3].[none:state_s:nk]</field>
            <field>[federated.0ormmsw1x308jq18vwd6h1jafeu3].[usr:Ranking Calculation (copy)_1507580014017179654:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5646779D-1562-4C7F-B6F3-702F66588E38}' />
    </window>
    <window class='worksheet' name='Rank of State'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ormmsw1x308jq18vwd6h1jafeu3].[usr:Calculation_1507580014014570501:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ormmsw1x308jq18vwd6h1jafeu3].[Region]</field>
            <field>[federated.0ormmsw1x308jq18vwd6h1jafeu3].[none:state_l:nk]</field>
            <field>[federated.0ormmsw1x308jq18vwd6h1jafeu3].[usr:Calculation_1507580014014570501:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{75EDB7D7-2F4E-4347-A6BD-0355CC1839B8}' />
    </window>
    <window class='dashboard' name='State Dashboard'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{448F7079-B90B-45D0-83F1-79DE6881F11B}' />
    </window>
    <window class='worksheet' name='Growth by Industry'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0ormmsw1x308jq18vwd6h1jafeu3].[none:industry:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0ormmsw1x308jq18vwd6h1jafeu3].[Set 1]</field>
            <field>[federated.0ormmsw1x308jq18vwd6h1jafeu3].[Top and Bottom 5 Industries]</field>
            <field>[federated.0ormmsw1x308jq18vwd6h1jafeu3].[none:_resultNumber:ok]</field>
            <field>[federated.0ormmsw1x308jq18vwd6h1jafeu3].[none:industry:nk]</field>
            <field>[federated.0ormmsw1x308jq18vwd6h1jafeu3].[none:state_l:nk]</field>
            <field>[federated.0ormmsw1x308jq18vwd6h1jafeu3].[none:state_s:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3CD0B44C-370A-4CF8-80F9-A882CBBB9E6F}' />
    </window>
    <window class='worksheet' name='Revenue per Employee'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0ormmsw1x308jq18vwd6h1jafeu3].[none:industry:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BE56DD02-FDAF-445F-94D0-C385645A2591}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Companies per State' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAgAElEQVR4nO29WY8kyZYe9pnvHntuVV29sfvOvbgYkJJAjKhlIAoQMIAgiOCDBEFP0ht/
      gMAfIMwvkPQX9CiBBPgg6UHik14oQQPMDIkeDmfu4Hbf7urOqlwiI8J3dzM9uB8rCwvzJSIj
      q7O64wMSmRnh7mbufo7Z2Q/787/6K5GWJY4BhzE4lgXHssCFwDwMwQBYloW0KFBUFYqqQsU5
      XNtGXpYYeR4EAMYYhBCYhSG4ECiqCr7jgDEmry+E2PqtQwgBIQQYY/J6dCxdRz/XsqydYxhj
      SIoCrm3DsaydcfRrq58zxlAUBSzLktezDNfQ563eZ9c90jhlWcJxnN7rvE+0zbmqKti2bZyb
      +k7V7xlj+H61QlFVsAC8nM123sWb9Rp5VeEsDDHyPOPYpuekwknLEklR9N3bYHiWhVezGSzG
      kBcFfNcF5xyebcOzbQD1zW6yDLZlIWvGJ6ahhxB6niQoxhg455KQOOfGh60zSxcRtR1PDFFW
      FWzGgIaQ1e/pXBMDAIDrukjTFJ7yUlTm6oLKxF3zVucC1M+EMdbLbMcCjWdaoFSoi4t+PF2H
      vt8ZQwgkRQEGYJNlOBuN5Hd0r7wo4CjMpc7B9I50tLPGgSg4x20U4WoygdfCeYwxTINA/n2z
      2YA3RBdlGUaeB6chxIpzCEByf98N6ce0EZIAEGWZnIeOwHEQ5znchmkZY+ADxqbxTYTxVKvz
      kGfSd766cw6B6bjWZ90xP52J1WsJIWAxhrHnYR6GO2NdTiZgk0nvGF04+nIhANiWhR9WK2zy
      HLdRhEq5sZ3jhUDoupLQiejkSwFwH0Xy2K4Vskss0V8urWD6OfR3yTksZVURQiDJc5RVNeg5
      qKuPOu+h53bBJAruQ7w6VmmK37x9iyjPB5+zL7O0iY1dx396doZfXl3hk8UCdrMTW5YlmcZi
      w8XGNhx9BwCAhywDAKRRhMC2UXEOLoRcTXWMfR+rLEPZ6Aa2sios4xgT3wewTeBDtjfgHaHv
      gDH4jrNzDfo/L0uMfH9raxVCoOQcjrIrtM3BcRwp+9L5Q8UfFW0rJI2v/j4U8zCExRjcR4hP
      beKg/n/X4qX+zRiDxZjUD/vGHiI6mvCkAqMAUAqB2zhGlOdI8rxVTrwcj8EAZFWFZZKACwEu
      BKIsqx9Ej8xP/3ftDOo1kpbVjjEmGdFtZMuhK4s6Rttq16fctu1YdJ66Arbd4yEr4TQI4Lvu
      3ue1jd81B9Nz0o/nnEtdr+9+HnPfT7IDqCg4R8U5LsZjbNIUeVVh6vtbVhIAcG0bV9Mpfliv
      ERcFxGaDsqrgOQ6iRmG2GEPFOWzL2loNuRDgzcrcZ/UBgLQsYTXWKtMOUFaVJIYdpap5MSa0
      iSQ6IfcpuKZr0u+t+26Zx49hCWpbKHTLjmmlPlR+p+v1LVIV58jKEvdxjPPxGKHC6O/FZMAB
      3MVxbe2xbVSKwqX+OIzBAmpTqRDIqwqObaNsmKioKqzTdOf6FmMoqgrxQBnWd5xa52h5aEVV
      yRdFq1BaFMjLEg9JMmiMXNvtHkOU+xKIybr1WEV5yJi0O+mLWxeecl6ikSBeL5e42WyQlyXW
      abplzHg/NjMAUVGgEgK2ZaHiHGWzeqnbeeh5OGt8B3GeoxICyySBQM3F393fw28UZl0Z9V0X
      caN7ALv6gvpCbMvCWJHvdXiOg0K5fpLncCwL8zDcskV3EZdqApUy7R6EQdjXsqLufKoI8T6Y
      4BC0WZNUumh7Bm06EcG2bfieh8v5HADg2TaKssTtZoMoyyCEeHoRSEUhBH5YrxE4DizGcDYa
      IdDkzvPxGNMwxCbLsEoS5JxjmaZYNSv/Kk3h2zYC15XKKFDvAqS09snZQC1ymR4gYww+Y8jK
      EnlZwnMcBK4rv3Mdp/YRaGZZkxlR9V88xhTadU+6qNd1/S7xsEsxPaZIpYuFbeLhvgqt6VjH
      cbBeLuH7Pj4+P0dVFMirCjebDRajUS0GP+ZmDkElaueGzRiuHx7warHYsg7FeY5RsxOMPQ8P
      aYqHJAGRquM4tdXCssCwvQqQN1A3ubW96C65NTDoAEC9S7Up5Tps20ZZlrUj0PN25N82k63p
      O9Mcu45rk7H1naDPcGC63mPQ57A6lmmXMJ5MsDg7w3K5xF2aQggBT4kweO8MANQ6gRACNmpx
      pKwqaXkh+Zs1ZrnL0QiCc6yzDJ9eXiJwXelR7no0QwhjKPZZjUzHJUkC27alS/4YxFRVFQLN
      iXfodbvErH2u2fbMaa7HFsHyPIfb7M5tC5kQovZvcA7btmEJAce2keY5nCD4cRgAaEykAK5X
      K+kn8BpL0NZxQsBmDAxA4Lr4+je/wdXVlWQY9binRpqmW0QnhECe5/AbP4U+bwJjDGmz+uyD
      LhGEMYZkoEJ+LHDOURSF8X67wBhD1DgzCY/ZXcomds1p/Dht51ecYzKdYpVlsAFczWZwtON/
      NAYgbJo4JBvAq/kcdiMvqw/ofDyGAPBmucQvfvlL3N3cILNt2LaNkevK43X7uCpyDJGNh9jo
      PUXMAmplty/+xjS+bialv1UPtYq2MUzKrWV4hm2wFF1Gn6Map0NzKssSrsFfcMhu0WakMEGN
      BQOAOI4xGo1a37E0AACY+T6SssRiPEZRFCiKQo79ozMAoQKwTBLMg0CGQhBIbvN9H9fff4/5
      xQUelkuskgSfLBbwFW+rjiHBYfp5ZKHSow8PFTFMDNpmCzcph33X1tHmH+g7Xyf4Nrt923Xo
      Wl3PXCf6IUxqGt/Wogra/CV07mw2w/X1NcqyRBAEsG0b4/H4/ZlBh2CZpvjt7S3gOCi0m7Yb
      xdQPAtxFEfJmG1TjjHRz3xAiMr0ANdyh7dhDzIptx+tEZvKR7HO9feek38tjFeC++1RNtENW
      f9MxJAaZFhH1N41VFAVmsxlevHiBeWMWvb6+fl4MAACjIMD64QFFkgCMwfN9MMuCY9tYxjEE
      51iMxwCwFa6g4zErqBB1FOIxlFX9BXGNYfVxVeLoghoq8BQwEWcXYev/vw+djND2nkxiUZZl
      SJIEQRDgk08+eX4MkBYFwtEIZ+fnyIsCNzc3tQIlBJyyhO04eLteyyCpe025IjzmBZCZ02Sm
      pDnebDYYMoLJAaavhOqxQ1ZEfYV7CmJTxR8TU6rfvU9iV8dXoZu31d3U5IAsigKbzeb56AAE
      gTqzLEvTWheYTBD6PsqiAHMcZGWJNIpgAbVD6sBx6AWbFEbe8lLpM89xkMcxkjxH0JFt1Obs
      MdnA1d9dMBHcPiLfY6EyrRAC6zRFUVVgjNXOpQ4mNhkCDoXJU6waEgicc9xEEbKiwDwMZWSx
      vM7BM3hC5EoYgscYqjwHEwIugKnr4moywYzsyoxhnaZ7RUjqL4gxBjSfUSokfW6Kvqw4xzwI
      6nTOAavf9WqFVLE8mObZB3236DtuyDXzqmqNbRqysgsh4LsuLiYTTIMAq+ZaXYlDVVWBc45K
      ecdVVUmH4VB0pTkSSs7xerVClOeYj0aYGJKfnt0OAAB3UYSXmj+AIITAxPOQMIZVmiIrS3x6
      fg6hmQ/btsgdwkcd+085yxXnGPv+Tu6CyjQ2YxgrK0nbys1YHQpBudCeQbHuu4bpOIIaYrGv
      KCKEwNvVCgAw8f2tHIyhsCwLvrYSv354wMV4jLAlRzeKIuR5Lp1YQgikaYrJZII8z3F1dTWI
      uC3L6s33rTiXOepOE02M5p0QniUDREWBKM8xVh6ibkK8j2MZ0CY4RxzH8oE4jaubVhrVC0sr
      JOdcHudYFuaNTbmoKjgdQWu0KxAo3KHtRTDGWlND9eOGiDJ6KEGbKdXokc5zuI6DJM+xThL4
      rgu/CfwjBtCvr6Ptc6t53gz1gtLGALZtw3VdFEUhQ0TCMERZltKuPwSO4yCO404G8B0HH81m
      nXN/lgwgAMRFscUAahJ2XBSY+D4e0hS+68KyLNzf38NxHNi2jTRN4bouXNfFZrPBeDzeygwj
      7y1vGGc0GuHy8lIyQ5ci2kcg+rGWZeFyMqmP7xDD5L0rKzodo1uOhuoJjNVh4pRvLQCIZreb
      hSHGvo+yqpAUxVZQYte9tY1tN4sISxJssgyWZSFwXSliTYMAvuNg0jyLxWIBWECOFB4352X3
      4VAdQn32z5IBgDppRXeUCFF79jjnmAYBHNvGpgmBHo/HUl6nVaaqKlxcXAB4l0l1d3cH3/fl
      94vFAkEQDLLAtH2n7jSmYymBh2v30nZd/Z51mD5rY6akybEeKR5rtYSIY9vYh/xUR9PO8xJ1
      fvfY9/F2vcYDasIXqJ2KRWPVo5XeO3Pwu+yv8Wnxqy3P7qRJdO+D7gyj+bWJg4wxJHmOKM9x
      2YzxbBmgapJg9MTnsrE4vF2vUTUMQSsKKVZhU0FAZSAyhb18+dL44LrQxxie5yHPc6N3smvF
      Vr8zHbevedF0/sjzZEJ52zmqiPYo87GiE3y8WOx8L4SA7/vYbDYQQsDNXLwKf4G0SJEkiXxv
      Q0G7Y1sIjHocfV5yvpUR9nwZQAg8pCnOlIdCLyvOcyRFgZHv47xxirVBF1keUzdHtY3r8DwP
      RVHUEYeaaVVVVk0wmTXVeQsh8P3338PzPIxGIziOg6KJoaJjKQnfcRxYlgWvqat0iHLbBZMx
      YSgsy4LjOLi6ukKSJDKojnOOly9foizLvRYnXUIAzLsnSQ6UFfaq8QQDz5gBgFoMUqM+6aGX
      nOPFbAbfceA1EYEmE5rJm2lCl7dTPb9vdXRdF2WTbzwEutVKV/TpN4lYRVFgtVrJgDzOOcIw
      xHq9lqsrMcfV1ZXR4vVY7Otz0HdhEm+mipWPGIFCm/eZS5+uph5rNQuo6uh81gyQFAVuGpOo
      KgpdKjKiqZiSCV3fEYbK1l1wXRdZlm2lRLbNx6TjtJlTP/roo61jyPpRFAXm87kknqqqMFZ2
      xWM7x0zM3bVAqE6+Ngx5NybYtm0UPfV5AbXpWg21p/GeNQMAdc0aUiL1VRIwh9W2yX9dGEL8
      Q3YDIYRchcnM2kUE6vdd3lNdwSadRhevaMynQNdqu4+IZ/p+352FjlWPV6NZB1vpBo/2I0AA
      eNN4UY3fa/J4l/avy9TqsfvYvK0eMykdY1kW8jxHURSdjKQSs/6dfvwQK9VTET/Q7Y3eZ2y9
      UmCf1asLbYtG23xIR6Pvn/0OIICtCm6qmNAlu6vQj+syQe6M38FQXQRhNwk7Q937+px02VkX
      9fRju+Z8TKYwMWfbvNveyTpN68rhj5wXWYGMY6zXsiI1mVd/m/0V/vzhT+AwB3/v/D/Clf3y
      +TPARCmiq5sVdVt034tvWy323b71l36I/No2d7o/taTiPrrJvgz+FOhbmLpCQvaFShMqjdze
      3sLzPHiehyRJUE5y/PPr/x2iKa/wf3z/T/FfvPxvnj8DRFkma1YGrruT/dVnZwd2M51U6ASo
      /q8GlZmyuUw6hw41clKdg2nbbzMxtpn69rFuma4z5Bp91x/KiCrSjlCJfecTBIFM01Sf7Xw+
      l+Kl67r4bfWtJH4AyHmGu+Lm+TMAWF0em8JsOYBCs7KY6vv0MYgqwphWdFW8IUVTT7NTCdb0
      skkRVtGn8B1jxR6Skqh/diz9oU/84QPuvWtRM51jEoPOz8+3/r8qX4KBQTRZHC5zceZfPX8G
      sBnbyhG2LQuO78toQqB9ZdMfpC4+lWWJqvEs60Sj7hpqojrZ+Yco0apzzARdDDLtACpzDRG3
      uginjfjb5mNCnuc71pY2EZQ+07+3OEeapq33M9S+33a+aed74b7C37/6I/zZ8v+Dwxz8+5f/
      Mab25ANggBYvKhHtEKuEuqrnTf1Q8kr6vr9FYBQpqj5EYg7V7mwrPQzaQMyliz+AWVbXic/0
      gtvEpMdiiEgJ1Ez9WFOr7/vYpGlrc5I+0YqOof9zQ01Y0/m/P/l38LdnfxdCCFRN/alnzwBo
      saGriiJ5SnULkf5SGWM7DiqV2EnMMTnX6BjP82RCdt9qTCHXQghkWbYV69ImBpl2BdNOY2Kq
      Pjx2B1HHPUTxJ6i5F3qsVx90ETJN094YIvX9lk2QJX3+7BnA9KAsy4Lv+8iaSFApHjU2XuAd
      8fWJBCYxCdglrDbFtQuy31hZwvO8ncJa6nE0Z3Ve6lgmMeN9W3iONZ7UAw4YR30P9I6HwvTO
      nrUjDKgTLSyNEOm353lwXVcGgAHviEe32pgsKepqplp9VGvCvjX4ddFJCAG3yVnQ81h1vcO0
      G5jSG01z179/yooRj4VrWbIT6CGg50QicNHiKG07T30uz34HUBM19JXa9KL11bKNCPTPuxxW
      pm2/63iVSdUVy3EcGb47RJY37TomGb1tZzqEAUzP71gWIoJLGXuPZFAh6gBA6sg5VLz7oBhA
      jQTVFUV6QUNftImY6Nptx+nHU23MrriTNqsI5bEeGpLdRYxDGX2fsXTGH6JDDAWjH+1ZDWG0
      IQtc17nqGM+eAVSoDLAv8avoIv6240lkUe3O+gqvHqv+r8J13a2qxn3jM8YGJdvo1+kzMern
      DzVHPiafYrVayZztOMswD0M8PDyAc47RaCTN2vswwWPx7BnA1mR7wqHET9B3kq5jiBBUxbrr
      nC7QvCl5ZcgcGWNbSf19+kfXCqkvIDoT07lt+RWPeeYCwLKpBl6kKZaAZO7VaoXz8/O9CPsY
      TPDsGcDbs1PjEOz74Gj8qqp6VynT6q+vmq7rSgVX1Qd0Bldd/EPufyjzkXKum1ufEpxzgNWB
      aUmW4WKxQFEUWCwW0kr2vq1awAfAAIA5FuYQuR8wv+ghx7SVBdehhk+0XYt8GBQqQdYMcpxV
      VSWbSiRJIn0JABDlOUKtPVTXOPr9keFgiOjVpQvtS6xC1H2i/SDAqixh+y7cqQ1fhPK+fww8
      ewZoU1C7GEC335sK0qqrn26HN43bxjgm5tTH7JpnnudyfFrt1UhQ3/clo0RN3zSnKRbcNh/T
      ym4i2j4LFJ2nXl//bCjhbjYbAHWTESQJNhDwxx6WqxWyLMNisUCWZbi4uDiIwQ7Fs2YAhsYK
      1LIDmFZuIQSiKALnXOafEkGa7OzGcQ0Pn2KHPM/bifBUsVqtZLEssvoEQQDOOYIg2PJEUx2j
      LqWZlG8hBCZBAK9p8aqjSxHvu7c2tOlIQ3Y5HZZlIUmSWp9hDEVeIM/r4li+7yOOY6PV6anx
      rBkAaCqO7Sn/Z00LzJubm52ITiIOx3Hq4kwDwBhDEAT16oXt8AgTE1DroizLMJlMUJYlsixD
      VVU7oRjqLtTF1EBNGEOqzD0V9IVkn5V6Op1uJcITqBtnkud4qVRxe1941gzQtmK3PXQiFApU
      C8NQvqT1ei29sdQhRCfgNjla/VwNwDMR62KxkMotFctSlc+u+2wTUdQUvqHih75KmzCEgI9t
      gNDhO478WcYxFqPRk41lwrNmAE9rlUToeyGz2Wznxdq2vWVpMIUKdDGWyVTYRpAkwx/SFdJ0
      bZO9fug196m43DUnk0XrmIwhm5MztneA3GPwrBmgrfZ+mxXIZP+mF6Z3NhxKQOo4usw7xJFl
      gs44JsZSq2B0Wa7eh5xM96mabtuU6kOZgrdUAnxqPGsGCLU4oD7HFR03hDh0S1HfdQmqleVY
      DGCaR5u1S9dlHoOhO6BpnrrY9ti50OJSVpXRwtWFsiy3KuXRfLr0KcKzZQCbsS0GGArdDNiV
      NCPPAbBKEkx8v3MFMtnQ92lJ2mWrNxG/Om7fdQ7FPiZNneG7rFeHIPQ8ZGW5FwPQLrlvvVc6
      99kygO84W9lgQ1Y808vsi9pkjOF2s6mbdbsurI4HOXR36UKXot1n3tV3HxMoR4JCLTzPk44m
      Yl61hmhVVa1ilo6nFruo4eFDHGM+UBluM3EPPffZMsC4xVy4jwd4CMMIIXA2Gu0lv5pk9iFz
      65pTG/Gr3w2Bbdt48+aNtIIRwSdJIovmep6HLMukPL9YLHpLORIOFfuGwrEs2JaFt+s1zkaj
      QbtBX3xW57mHTPKpwQCMWrqRd57XQohDHs6+35uYoM0q1Laq9x2jHjs0CtNxHGlvdxxHBptR
      4Vy6ThAEqKoK19fXewWhZVm2VxbWIXBQ94JLm5LpfTvUY5TvZ8kAtmXB1aqq7bs6E55ytTKJ
      BEN8CfpxOvHvo1eYQAxAu0AbGGP48ssv9zKx+r5/kLx9CKiqhl4XlvQ6n1pkPUL/eJYMUHGO
      VZpiqpkuu2B6EE/pwFHH0EUbVU5XCdm0Q+mE3mXy3BdDdaZ9Fo338UxV6AGIqkmWSqs8ZpF7
      ljnBAnWjNRPohrfCiFH3DDApiENyY/tW8EFzVmR4XZ43mXDbZH6yNO1jnTk2aPwuU+2PBVpU
      GGPSo//w8HAwYz5LBgBqZUhHm/1dCIEoyxDneev3h4pQ+vhDr2FiBNP/zxU0z2N4ko8BVQ9S
      37Hrunjx4oWxNtAQPEsRCADKFmXSBIsxzMMQmaEQlX4NE56CELvMmfsqdD8WowwRx1SR5Cnn
      sY8JvA/r9RpBENTF0R47uadCkudgkwkgtuNwdJlbvfFAK6MOvHuJRVXtNL/eB49VttQ5mRRe
      fSzOOUrOd8Kl3ye6HHeExyjrx8Q+ucpFUaAoCtyOXz9fBsg5x30UYdaiCOsrqUnuplWp4hzr
      NMViNDIWrO2Cznxli25iOl5d8dM0lfFIJh3FRFhpniNwXYgfSQwxzctk7v0x5qHDtu3BnSYn
      kwk8z8NfRX/6fBlAND92S0Ro27aofk6/K1EXxibz3fsy46lzomoIKtpWLSHq/OPA8+A2yTXP
      BY9Z8amzO9VlJYJVGYpSQ4ekn6pQqwL2gZx+f2f87z5fBgCAZZJgHgTG+ByV0FWriYkpPMfZ
      apD2Y0AnGi4E3qxWYMBWIohKYNS1/jmIGMDjxUDK1KM8Cc45SivHt+yvsbAuEW7mSNMURVFg
      MpmAc46Li4snEwHHmD1fKxDQbg7t8p72eV2fizxtMYYoz5E0rWCjPJdNv98XwXeFX5ie1WPn
      FoYhgiBAEATy71v7e3yb/Q3+Mv1TjCYhXNdFGIbgnG+Vv+8yzaqgrL2heNY7AGAWEw59CX3h
      Bo+59hDoLv2R62KVZfj69hYjz0Oc57gwBIE9tTd7n+v3hXx0YaK0tyX4zMYP+e9w6X0E3w3g
      XbQ7P/vm6vu+TEftwtYu23v0jwiGWnyB4cHuQ6hDHGHvQ9TQV9WP5nMkNzcoOEdSFJgrJVKe
      yl9gEhX3ZQKd+NvimoY805GY4Q8n/2nv4jR0fvvqS8+aAWzL2jspvu9h/VhufpVIJIGgTvop
      sgwF57iLIow9D56i0NGx1YBKyqbGeyYxxgSV2dqeYZuCajqW8q9VPa1r3vq5bX3dTDnZ6vf7
      Ks/PmgF4x6rQlejSpRC3OXLeh9ytejCpoQc58LJm5VqlKS6VTu9qDXx9pdWvnWVZJwG0hWeo
      37d9B7zLq+5bqS3Lwmaz2elYbzpvtVrB931ZrICxuoAB5xyLxWJLT2GM4fvvv8fLly/lfPV5
      2rYtlewheNYMMHJdtJGlXvXApNB1rWbAsKSZY0AlDJ0QRp6HLy8u8NvbW8zDEGejkXG17wvv
      2Ndh1rc7DHluQ+bYhaqqsF6vAdTK63q9huM4CIIAr1+/xhdffIH1eo2qqnB2dobVatV7j6ry
      PATPlgEcxnA+Hhvlf4K+3bcd0/X5+zQxtllVGGP4dLGQhYDV7/Vjh1y3a/yu+94Sz5Tdqs/6
      0rUz9Z1XVRWKogBjDC9evMBqtUKapri4uMBHH32E7777Dh999BFubm7w61//Gt98883OuKq4
      5Hkebm5uMB6PW/UT9Z6eLQOMfR9eR6d19QXR/6aH3ebNpO/eB3T5WvcUkz6gyvBtUazHNOXq
      z0Z/LvswlnpN/bu250yJOnEc4/PPPwfnXIpYjDG8fv0an332GaIowpdffomvv/4aFxcXrfOl
      88IwlN3h1XmZ5vFsGaBsZOShaJPl6f+HJIHF6p7DQghwId5rCY6qqsAHxPZwzvHDaoWPtCpp
      Jl+G/oK7oMv/+koIHFb73ySWDdk16PiXL1/Ka9i2vdVDLQiCWk+az2FZFj7//POtMdquGYYh
      kiTZulYbIz5bR1hcFHjbFFQF+gOzulZGIQTGvo9xE4tTcY7vl0vgPTIAAKn4tvX+AupSgXbT
      Q4ug73Ym4nrMrjBkV+n7/pDdlDGGu7s7fP/993LXo2upelCb6Ng2LoVa6CZR0z082x1AAFg1
      FQ7IKmJqUD30xVNYQVVVsC0LvusiL0t4Wgsmuu5TiEdE/PR32zyvplPA8JL7TLgm8cok1qif
      DVn11d1Hr6DdttrneW6sjKfOybIs/PDDD/j93/99fPPNN4jjGJ9++ilubm5QliUcx8FsNsNq
      tcLV1RVub2/x4sWL1sVQv/c0TTGdTjuf27NlAOAdE4w9D6HSUqhtG9xnFbwYj7e6FOqE0SW7
      HgK6Vp/FiaogmHwffYxgsoK1WXbaVv2+ezaFb5vOoeoTdI6JcRhj+NWvfoU/+7M/wy9+8Quc
      nZ0BqOP1P/74YywWC3z11VdYLBZIkkReo80Pod+P7/vI8xxxHMtCyDtiX+fdPgMIAIlW9UuH
      amIcKscyxnYqLfdtrceA3oi7a35tW7+pM2bbNbquNwT6mCZzc9d1TcSpWm9++OEHzOdzTKdT
      3NzcII5jjEYjzOdzvH79Gq9evYLjOLKqhcnT2/ZcaCzHkCdCeNY7ACFVbrrPrNZWUUEXAdqu
      o1eiuL29xXg8hm3b8kFSYanlcimdNYeGWBMxUKjwarXCYrGQtXzCMNxq+K2/yD7i18U6dQXs
      WiwqLbvONJa+m7St8ur/KoQQ+Pzzz+XfX3zxhTSHApBKL81jOp323rcuBhVFIS1CJuPBB8EA
      gRIVuI/CZnpIbfK9SaQSQiDLMll7krb1JElk44v1eo00TaV38hAwxuTKFkURwjDE3d0dPM9D
      WZY4Pz/fuq+u++hSGE2g+9arq6mK6JBnrj6/NpFEP179bZprn0m469p0PPV1UETZRTAAACAA
      SURBVC1C6vU/CAZIigJoMn1ML7jtwesPreQcvMVN3mZZoYTrqqoQhqHs/KK2Ox3ieewjhvF4
      jIeHB7x69QpZlmE6ncoaPCbxQb0/dbUdIubQcW/fvsVkMkGSJBBCSLNjURTyntbrtawzNNNM
      s23xOvr8TPfftUip5+8ripp2dxKdWNNaSqWTD4IBsrJstdurD0m9sVYTY48IpIIxtkPgFK8O
      AKOO+pV9CqtOAFSikMYcauHqIvo+AiLltCzLrfqhnuchiiJkWSY7sQ9Zzft2KBMTPIWupSvd
      9DwrTUQDPhARCADyqmrtF6C2G9VlTvUBjzwPRSPOPHV5P9POZDqm7f82BlDNm6bdUBdlTDsG
      4fz8HEKIrZ2GzqdQAtJv+ghV1THadgPTjnAIE3Sd0yVGMcMxHwQDCABvNht8PJvBG2i3Vjs/
      yhUKgN+sBmRnPmg+Pav7oddsEwtM1pyu1V0lxK5j6XtVGaa/bYN/ZB+oBgl9bqZ7BOrIUPKW
      B3MPr/Pf4tJ9BS8Pkec5OOcYj8cHd6s33ccHwQAAUHCO1w8P+Hg+36tRnLpaqIRr27bc4vdF
      n3gyRFlX56SKQbqJdIh83Wf1+jHRJfvrK3UURQCAxWKB/2f1z7Gq7uEyD38Y/GdYreoeb77v
      D65kTeN0jf/BMAAAFELg9cMD/tbFBawD5UeVMMhRss8DpXOHfq++6GMwzj5QRaJjX/tYUOf0
      8uVLKc6WUe374eCwXQsXFxdbyTj7iE6qeEb/A00PhWPf0FOjEAI3UYQXk0mnRQjYDfoygWrl
      qw30+jD0OHrw+mqvbuHq3IZYUtrug3YPU7jIUyiaxwS9I1Uk/Xuz/wRfZ3+Jl+5nGNkTwN49
      pws6sat0oP7+4BgAQF3kqmkafb1aYRqGsrfUyPO24uq7lEACdWPfp7bMvhhChCYPcR9T0DEm
      RlJFq/cFlen7djydodVjp2yBv+3/ewfPw7RYmHbjZx8KYUIlBG42GyRFgbQsEbouPMeB+qh1
      a5C61ZpWRdd1Zc7rsUCKYJedfh9ZXZ+3vsPQZ6Y6ST+G6KPOpY1ph+hKh+5gQ0S+D3IHAIBN
      USBaLmFbFvKq2mqop8q7plWobXVyHEd2G3yK6nFt89C/IzFpqLmvi7H3mVebpegQ6AtO23WG
      Mn7bwrHvnNS/hRAf5g4gweq0ydsmb0DffttgMsXR36RkHWsnMMnjXVYbHaqp0tQqyGQiNY3f
      tUvo19nnvrqYRp37ITvc0O/60GYKftbVoQdBCIw9D2VV4SFJMGtc+YTlcgnf96Wnk3MuY3pU
      ZVEVf6bT6buyfY/wFdTT291pul4wsF08S93J9FW6bXs3reZ9Vih9xzR9Z7ovdTx9/KFom6d+
      rT59og0qM+rPFviARSCgdpAtowhXTdKD/gCppMhyuZQRnL7vg3Mum8dZliXLZRNzUGM2Ibbj
      YvaFvgKaiLhvFW4T50yM1EY4+u8hhKTH+egMdwzdYuhOrY9zTKvWB80AQO0ga5Ppz8/PUVUV
      rq6utiwhFJMv5UAlW0xd8VUGOZQJdLTJxiZCSooCZZPBNlYcdm3M0EegKlHr3+nEqDNn24pv
      2uHUBQjYLl2jX28ITMzXd/5QveGDZ4Aoz3EbRQhcFyPP2wmY02PpieDp5ahE4TZZZ3pcOynH
      j2ECMrOq0IlYJeyq2X2Ycr4JqnxLTbLVz007hpqW2WWVMlluTPMnUVFlrLIst5JX1Hmqc+sb
      z/SM6B7anp2JWYuiMPYO+OAZQAC4SxKwJMFZGO6UQddlZvUlkeOor7w6McGhoRNArVz36RPq
      C3YYg++6O4W/gG27vr77DakM1+UX0K+nimAq9P91b/pUeQ+Hii+qnqbPeahSbBLf1Gt88Ayg
      gmKETFu56QUS8Q+RZxl7FzpBO8VQDHlZO2KcJkao2CelUldYu8QC0z3p+sshOFRmb1v9u8bo
      Utj1ufykGMC2rB0rkGnLVUFMoCqIfS+LsrTILNkHLgTsATLrsaErv1tzGlhEt2v1VJHneev9
      9cnrjLHWWKwhSj393cUgdGyapls7KmMfaCiECRXnSIsCvlKKQ18B22BZ1o7dv+ulq8nZOhPo
      L/whjnFuiFsyoY1Rh8CUNjiUKPd5Vib4vn+wftSm2xB0HcF0j32WJCGELJrr+/62OHnQrJ8h
      BIAfVivkLaVOukoN0m96MEOIwHEcY4UH2lXKqkKe5/CbB98n/w9dbU3Y17rSZj0yMcVTo2++
      xxS/1HdNf/9kGACoO0u+Xi5RNBXYTNvkPgTSB6oSoVeSEKJOuPF9H57rPnkG2mOIqGuXUH8P
      3RloARhKuPvqUvvCZClS6eAnIwIRCiGwTBJcTSa9Fg8dh6w2dtPFkbZZerCe69bmQduWxa6e
      Co9ZIdusXvRbl7n7xurSPfZBHMdbjES9A3QT9T5QCZ/+/skxAFA3mZj6ft1jd6BM3XbMkBWQ
      dAI1dOJ9K71AOwO3GQD0Y9qwj4h1rPuO4xiMMZkKeXl5ich5wO+Kv8Zn/i9Rvq3voaoqBEGA
      OI5xeXm5Y6Ezzf0nvQMAAAfw3cMDLsdjLLTKDUNXMv34PhATUHeSPutH33iP1QX6vjMxxBAl
      uu0zXQx8jOxOYpRlWfA8T+YJ/yb/CnfFG8Q8wr89/kO54JABw2QNUv82iWY/SQYAaiZ4E0Vw
      bBvjxsymWjsIujnwMaCXQUxg8v52Qd+iDxHfdD1nH0I0JbGbxKG28Y8FIQQuLy93xJ1PrS+R
      VjE+83+Bsb3dRmo2mxk93Doz0HP9Se8AKjZZhsBxYCs3rb5ME1P0waRYESiSdN9w6jYT31Dx
      bV8CNFmCTITTpSPoczwmE+jWNSEEPra/wMezLwDRH67eZfFTr/2TsgKZsMoyRHm+9cLVhzO0
      WK0JbS+cttq+lp1DbdhDQcTYF39vYpi2z/T/2zLc+sy4bfdB4tOQ+xRCQHDzMzFZ4vp+OOc/
      fQYAah+BvmoR4as/wLb82fUy+8yqlmV1ij/6+eQQIsXuEOjbvXoPRVFsNeZQ502KZlmWWzvi
      kJ67Q3YfleCOhaGeeHV8XSHebDY/fREI6I5wfEqQOGR6UTrRrFYruI3PIAxDxHEMtwmGS9MU
      o9EIcRzLyskmdN3bZrORBO04jpxbGIa4ubnBZDKRFaopapLmXhQFgiDYanuqj3uIKEnP4TFJ
      +0PG1E2z9Nv3/Z/HDrDJMhRVhWqAdWIfh5kK03XJ/T7kHErSGTVtUmm1LssSnuchjuOdsof7
      wHXdLf0kz3PpoJvNZjLcm7o2kkVL3S277qHN8qJ/ZtJzVCvOIbqMabc27Tp6DJTrumD/71/8
      hUh64jF+CmCoHxYVx2UAzsdjTA2JJkOIX3/gapCV/tBN3dX7YJqHyaJBf5PN/JCYHHX17lsc
      THpBWZbGcU1OMd1UyRiT4hnF6hziSzGJOPr5tJio7+dnIQIBtR4ghNhqPfT9agUxnWKulF5v
      Y4I2C41uEWozte4L04pp+rvN6aPOaQjUnc+0m6nPRP3OpEOZrEJtz1MIIZuPMMaQpqk0HzuO
      gzzPZTl6E8qqgkDdW01F2/PT38vPhgEAwGYMFmOwLQtZWdYBdOs14jyvm3CwusqEajJVf7et
      Ml1OJSHEwXFAQ/wT+neHhArotvF9doFjmD5VpqFGFrSjkfint8CqGnGmEgJRmu5E3DJmbqyh
      +zp+VgwghEAFoNCsG6sskx0pLcvC5WSyI/fqIkfbykwPHoDsIjPEmjIEbQpfm837GMRpEmP6
      xjbNZcg19B2DVv3xeIw0TWHbNtI0BQBkTRfKvCgQNGJsHMfyPLJoAZC7icnR97NiAA4APS/s
      Lopwu9ngfDzGWRi2ElyfiEIYatLUFWLT521jDPmuD+q5er7tPue2fT/EuNAlstHOQLE+jNUB
      cpWoi1vFcQzP8+RuqybZFEWB5XIJ13Xl5zSPn4UVaB/kZYmiqnC9WuF6ve6VwVda95Q+hmiD
      6n/o8h90reymz02E1yfjm/7vm3sbhlynz4lmumYYhrUM3zyz0WjUKmq6rouLiwv4vo8kSfDw
      8CCf8YkBNKglFu/jGN8ul8aevfTCsqrCD6sVSs1MSGmT+4oItAq22caHEgtZo9oU+rad7bHO
      qi4x5ylFta75qJa4MAy3ChucGECDbhKOiwJv1mvAYOu2LAsfn52hFALrLNsiWr25XRfUl7Rv
      H2H6obGfkpjaMMTidYh41rd7DGEe3VKn6zQ/Kx3gUDykKeZhiLDJL9iCEPj07EzqFqqiSuG6
      +0Z1qn/3EYD+/z6yO/DOf/GYlX/Iqm+6ly4CNoltXed2GQdM31HoyYkBBqJLZrYZAwy7A4VE
      74N9bPd9cx0qfu27OuseVR10Dya9Y4ipla6hX0+/Vh/a7osxJuvBnhhgIG6jCF9cXgJ49/KK
      okCe5yjLckveFkIgiiJcXl5uNZsDhltMDiFMFUOJRC8KNnTMLuNA17iHEG6fWDXUNGzCiQEG
      YhPHuL+/f2c+syw4jgPP82A3pjmv8WZyzpFlmTTd6X6AY5gWj4Uh8vuQc3XT8BBGV8fdh/H3
      sVB14WfnCX4MLMdBOJnAxq4yddOUY/n8/BxAHV786tUrrNfrujSK72PSONcowGwfDF2Zj0UU
      j8FQhdhkmaLf+m55CJMO3XFPDDAQXAh8c3ODz8/Odl7C2WiEN5sNKvGuCpwQQvYaKMsS9/f3
      ss9tEAQyAGwI2hjAJGf/mGgLwxjqAFO74nT5JI51n0L8RKtCPBVyzhEXhcwxJjiWhc/OzqC+
      YnqpVVWBMYazszPYto04jnF7ewvLsiSDFEXx3kQeFXmeH+U6bf6OLhmdwBjD9w9v8b/8i/8N
      f/r1V6h4hT/48t/Cf/0f/gO8ml/tXGsI+hhOrQ7+swmHPhYYgE/m8y2HGbBdcYCUYs/3tzpW
      CiEkQziOg/V6jSzL4LouJk0do0Pjhhhjst0rMCw3ebPZ4Orqyljbc19z6iGwLAv/4jd/iv/+
      f/0fEGXx1ndjP8Qf/1f/Hf6D3/u7naEhJgzZWdM0RRAEJ0fYvhCowyV0qOmGnudhU5b47c0N
      1k3wVpLn0qNMrZqCIMDZ2RkmkwnW67XsZOP7/kFZUiph2LaN+/t72Lbd+jOfz/HmzRtjcdpj
      KZpduF7d4o//yf+4Q/wAEGUJ/vif/E+4Xt3Iz47pNbZtG1lRnBjgIAzwdt5FEZKiwNe3t/hu
      ucS39/f4zZs3KIXYco6VZSnTIM/Pz+G6Lu7v77FarWBZFnzf7yRi9YcxJv+mGHpdplZlbcYY
      rq6ucHt7KyuvvS9YloV/9if/J9ZJ1HrMOonwz/7k/9prXkP1Ktu2keb5SQc4BLdRBN+26xwC
      BeqLqpQXcR+9e8lvViu8nM3gK1XriEBJJp9MJvA8D1EUSUboA4lPagnwtqC6vKrgK3VNZ7MZ
      fvjhB1xdXe3tuDsUlmXhX37zr3uP+5ff/GtZvVtlYpNhQHey6d+nTcupUbPjWScz6GGohMD1
      er1jEZIBch1K7SpNsUpTuLaNv3V+XnuRNXDOZfz7fD4fXFxLiLrSAXVnoZxi9XsAuN1sMAsC
      jH1fEtbLly9xc3ODxWJx1GbhXXOtRP9qXbVYlkzoCwXxHAebNEWc5zgbj2E7zokBDgUXApUQ
      cJSXQiECjmUhcN2dwDoVRVWhakr+dYEqzQ0FiVRd8TkXk4lkUjouyzJcXFzg5uYGl5eXshrF
      U4Fzjl+/+gX+/Ou/6Dzu1x//wmhe7TOrciGQ5nndZqo5x2IMl9MpSs5hN47Lkw5wIEoh8G1T
      il0FEdWr2azzfLthlKPOqSwxGo16lVfXsjBpGkWoyPMcV1dXuLm5wfX1NUZaXdVjQgiBf/gH
      fwTPaU/i9xwX//AP/miQOVW9rhACWVEgKYot8ZPgKFUkTgzwCBScI20YIMsyacUB6jihLgLn
      QiDpaC10CGzb3uoU2YYuC0+WZXjx4gUuLy9xfX3d2r7oGPji4hP84//8H8GxdndBx7Lxj//B
      P8IXF5/Iz3QRqCt0PHBdLEajeqduOSbP85Mf4LG4bFInHx4eEMcxwjBEkiQYj8dYRREyxsBb
      MpV828ZnZ2c4pu2FRJfHEi7J0+S3eCowxvCvvvs3+J//73+Kv3z9N+CC4/c/+SX+27//X+Lv
      fPKrLUbVjQGmqNR9zLdlWZ4Y4LFgAD6ezYDGAsMVuT5KUxS2jbJjJ/jU4FR7LI7V2Nv3fbx9
      +xZXV1eDdpbHwLIs5FUBLgQCxzOu7LrHuSsFdEj8VFmWJyX4MWCoHWNpWeJiPJYysxB1k+uI
      vSuQ2/ZClklyNAbYJyx5CPI8RxiG78U0yjmHw2yAmW35phihtvsbkhhEHvsTAxwICwBLU3ij
      Ecosw32eS+/r1dUVLMvC2LJQcg5mWbCFQF6W4I6zFTNUcA4uxE6H+0Ohr36PYQLROO2GikGq
      E46ImMSU9+lf0MOyTUzDOa+bl7+XWf0EwTiHsG3wssQmSbCYTiGEkEVmsyyrHVoAqqbSBKsq
      MMuCUESirCxxF8e4bCk8ewioBOAxmMD3fdzd3WGxWHTGKfm+j+Vyibyp10Njp2kqWxc9lgkO
      YuzmnLwsESp6UZbnsE8McDiqZlXnjIGFISIAI8fBPAxRlqWM9ByPx+BC4O16jSzPt4ifsEwS
      zIIAnuITWC6XMhSCVlDqVK92p6RKzgBkKMSxojwByJglqlBturZt27i9vcVlkzGndsV0HEea
      VKn47lCoSq8q2+tKL/1vyhuuOMdvb27guy4+dl0keY67OEZWFChPKZGPQ2XbqACAMZScI80y
      VIxhHgTwFMuPDeDlYoHvlkt4lgXXtvGgOJkEag+xugsEQYDVaiUdW5Zl4f7+HmEYoqoqhGGI
      KIp27P5FUWxZgNrCBoZCCCHLiLx9+xYvX75EURRbhEzjqZ9Xinn46upK5kMMrZSn5gaoc9Et
      QabwCJVZbMbgOg42eY5/8+bN9iCMnaxATwEG4LPFQnatJ/DGeRZ6HsqqwkZZTR3G8HI6lXEq
      ajl0Sr+kEInRaCQjSieTibyGSd5VCeMxjMAYg+d5MsJ0NpvJMIo4jjEej1sJmwoEJEkCIeqi
      Vl1MYIr6NIk+OvGrnwHvInd/WK2Qtox32gE0eLaNinNUj3BQCdRdKj+Zz7eYwLYshK6LVZJs
      yaMA8NnZGaIsky9yPB4biVUt6qT+TaAG3eoKfYxYfyGE1Gtc18Xd3R0YYxiPx7Kas4moaSxq
      Z5qmae8OYJLvuyw+baiqCt/e36PsSo7pnMnPEHlVbSWxHIpKCLx+eNhiJCEEJr4Px7IQKas/
      VawuqgpZU9R1CHHqLY/6CFttugFANvg2HdM1ZpZlODs7g2VZSJIEl5eXRj+BvpJTSmgcx3t1
      z2yDKvubxnq72XQSP3DKCHtyBLaNTxaLLTNnXlW4TxKsFD3AsSxUnMNiDL+4vJSFtrqgEyoR
      Aa3IOlG8ffsWs9kMt7e3mEwmMmiOstGoO0wcx1gsFpJIi6KQEaYEYrq+Eo46LMvCcrnEixcv
      EMe7iTC64kvXakNRVSiqCo5tw2IMZVXhPo4R5fmgXfwkAj0x0qqS4hAxgWfbmHge1mkqfQJU
      W5R2jk/m84PkdWKKrbxXTRcYj8eIokj2CouiSK781KZpvV5Lq1JVVVsMwBhDFEWtPcMIJmcc
      5xwvXrzA9fU1Li4ujFYlPYGncwwA16sVCuoR3P14dnBigPeArPEDqPrAyHXxxfk5fnt3t/PS
      ojzHd8slFmEoleIhICJPkmQnFEIIIc2Uo9EIi8VCfq5GW6qtntqIsCzLQcRvOheA7PpCHWBU
      qEzbdj6h4hyrJMHY93GfJJ3zacNJBzgyTGENAtiJSCQTndciC0dFgU2W7bULZFkm7fZq13S9
      U4oeXkyMo3Zhod99PYcPAee8Mx+Z5jZk3IckOZj4gRMDHBVtr+tyNILdRFaqP5xzLJrqcSas
      smxLT9gZz5CN1laVWmeAroSZLqarqkoGpW02m62x9EQcKh2pgpRlIQTOz89xe3vbGrhnsl6p
      P+sse5S1DjiJQEeFQF1e3bUsCLyT69d5jvPJBJYpoKvDJCgAvIki3MYxQtdF4Dg4U5JUVGuR
      qpS2BZMNvo8OokqSRCrSs9kMDw8PsCwLWZbJcUk8IqVaCIH5fI4oiqT4M5vNEASB9GS35fia
      5n0XRfAdB2/W671lfh2nHeAJYDGGj6ZT/PLyEl9eXMB3HLxeLuX3qrdy4vsY9USDVkJgk+fI
      eoLSTDL1sUEOL9d1sdlsUBQFsiyT6ZOu6yJNU+n0YoxJ0YyahiRJgjzPZT2i169fy+A0HaZA
      Nte26w6fR7if0w7wBMiqCj+s13g1m2HkeTI90rTKUT7BfZLg1mAWVMG1WBiTGZSiN1U7u6rY
      PlaetywLeZ5L0ynpCupc9HEWi4VsY0SfU++EoihkHdW+0GvOOdKigO84Ox15DsWJAZ4IJef4
      brnElxcXtY1asW/rBMMYwyIMsUySTpk2znNkRVEnehsCxehaJtOjOtZjoFqKGGPYbDYoyxKT
      yQS2bUulmyrT0XG0+tM1iEFd10XWeMDJe63rNoTbzQbREeR+FScGeEJwAG/Wa4yDAAslahPY
      ZQKLMVyNx7iJ49bVTQD4tjGPToJAhlOYrDxEgMfMOVavD7zb0UajEb777ju4rovpdIq3b99i
      0vTtVVd83/eRZRk++uijHUa8uLjA7e2tDO4zMeo8DAHGcGtIdD8UJx3gibHOc/ywWuF39/dI
      GvmcMYbMoPxOgwAzQ3yPilII3MQxvrm7q3MMDEFjZVkiiiKkWgdLYJdZDoF6zbIskWUZptMp
      5vM5wjDEfD6Xodu+78PzPFnhjsrE01wBSP2AIlnbdimnKWd4TJY+7QDvCVGeo6wqXM1m2GQZ
      8qLAJ/P5znGL0QhZWSIpCnRJuRzAKkkwbQq86skiJE+XZbkTd6M7qSgmyNZENRVVVW3FEE2b
      BKCzs7OdYy8uLsA5l2KRPjaJQzT+aDRCHMeYTqdYr9fGID/CMeK0VJx2gPeInHN8e3+PZRwj
      KQrkhuQQhrqkx8V4DJsxY6okffZms8Hf3Nzg+9VKihucc3iet5WcbwLJ6gDkOUVRIEmSLQeY
      et0wDDEajWQcUVdyi6nfMYVwm/r5cs7hOA6yLOuc96Rnh9wXpx3gPcKKY9iWBeF5sABc391h
      5Lq4PDvD9fU1ZrNZXaumqmDZdn18EKACwMuyTqdkDKHjICkKCMcBB7DJc6yzDKFty+ZvtMr3
      MYIqjtDKG8ex3FEoFigMw62dw3GcuqzIwMhVyitWPb/q9YIgQJ7nmE6niKII8/ncWBXvWLnT
      hBMDvEcURQHmunA5R5HnsGwbt6sVRFPFGahTIck5NB6NEJHntKpguy4E5yg5h1WWtTXEdcFQ
      R5jOGyJVCZISaUwZVgCkTV9VPAPNO03fE/Sw4yGWJdXyo39OliWaA4VJUPwSWZdoN5r4PjZH
      KtNyYoD3CHcygQBQAHB8HxUAZzzGQ5rCEgIjIXBxcSFX4qQsseYcDADzPAiy/zMGzhjQEJSv
      eIhN4QNqbzJV/CAb/j7+AZ0RVKI2eaCJQShhRmc2dadyXRd5nqMoCukpfvv2rWwnJYTAJ598
      gk8uLvD9/T1Wj4gBIpwY4D2iUhS4ilZjywKEALcs3G82eLlYSCK1OIdgDCQESPu3EJL4gdp6
      5Bri/2l1VVu1UiwP8K6Alp5Q0wdTeqXODKRj3N/fw3EcpGmK2WyGpCFaIvayLKUJlFIl4zjG
      bDbD27dv8emnn8Jpum/meY5vvvmmFouOVLf0xAA/EvSV2mIMZZoibcIKyrKEQ6JRj4x9F0Wy
      IrXXxPgD2xljNKZlWYjjWHpyH5MjTCt6G0gRFqIuFLZarWR1C8pHoDkkSSIDBKm+Eo1B1ifL
      svB7v/d7EELgX/3udwfNe+c+ThlhzwMWY3CLAr5to2wqsi0WC8RNUncfmTIA8yCAY9s4H49h
      N442PcVRL1hlCpkYiqqqJAPQjtCWTqnuMlmWyXIvqtOO/idRjZLtVXAhsElTfPfwsNdc23Da
      AZ4JuBCoXBdn8/lWSZWJ52ExGuG+J05IAFimKRiaGppJgtFotEXglC7ped6jc3IphdKkIJt2
      FVU8C8NQNgek49XwCro+ecvp3E2a4i6KjE7EQ3FigGcE3iKHT1wXSwxL9xMAbjYbII4hGEOR
      ZaiqCpPJBJvNRhIaiUKfffYZgDrMmZLdVWI1yfvAOwVajzOiytRqLJAKMp3qSrCcf/M/NQtU
      kRYFoiNLKycGeEagLDEdgetiHgRIy7K1vs3OdRwHqySB17RZKssSYRjK+jyMsS3xIssyBEGA
      b7/9FrPZTLZcXa1W0ixLHmPGGC4uLuB5now8zfMcaZpK3YLi/k1iFdUQBbYtR5Zl1abixs+g
      K+ZD7n1fnBjgGYELgdsowpVWgQEAFmGIb+7vB12n4hxVI5vbjoPZbCaVYfLo6hYjz/OQJIms
      AUqhDmSOBID7+3v4TWcZslSRZYnCL8isSrtDlmVSGTY11NYzysgcqvoXhuQHH4oTAzwjCNRp
      kCPfx8jztlIs87I8KAgsK0us0xQTRekk4lQJcjQayXh9ldDG47E8jzy56veqg023KlFtU+Bd
      rzMTERNzOo4j8xn0762mbMyxcYoFembgAK7Xa9xuNlufHxoExgF8t1zim7u7ugy70kJVl8eB
      9pxgWuHVnGMyUdIPreAmkNiT5/lOuRZV1NG7vtBc0qJA/ATZbqcd4BmiEgL3aYpKCJyPx3Ab
      G//E8xDlOS7GY9xGUWe0qAoBIC4KvFmtcDWdbu0AZHtX5XU9WlQHiT3koFKtOF1m0KSxTFGU
      KtUGAiDTI6miBZVTz/NcikTjprk1EwLccXCMZq4nBnjGWGUZNlmGF9Mppr6PF9Mp1mmKs/EY
      JedYJsleYtEyTbHJsrq/MbbLoehiRxvxk1MLeBdnBPR3aOecyw46VVVhHmXtjwAABgpJREFU
      NBphOp0iyzIZHk3MSBGjZGZ9eHiodx/OgSwDs6zag36E0OgTAzxzkEhkWxbGnod5GIJzjqvJ
      BFlZIt7TLFgKgTebDT5qlFw5ThOOrHqNTSCm0e3/fVCPJQsQKecAZN4CXZ+sSzRWEAS1n6OJ
      beJHUohPOsAHAAHg9cMDHpQMLyEEXhqsRUOwyfOdaEq9nhDpAmrxXZLVabcYwgCUAKPnAFBM
      EolOVKbRtm04jiOVbcYYptNpXfEaQCEESsaOlhV2YoAPBAL1TvD13Z0kPMeyjFllQ/B2s9lJ
      Lm8rqaISepqm0hRKUBNnVJMlhWG4Srg3fafuNI7j7JRkVL9/irxmwokBPjBkVbWVFD72PKPz
      rA8V6oR9pniGe89RQh9URfmrr77C7e0trq+v8Zvf/Abr9RpxHEvipuwxCnijdrJ6JTnCUxK8
      jhMDfIAguZ8xVmeGHXqdssT1alW3CmpkbbLGmGBKfmGMScsOUIsy3377Lb7++mvEcYyvvvoK
      cRxjvV7j7u4OWZbh/v4e33zzTWu2mmkMALIC9DFxYoAPEFlVoRQCcVHgu+US/BEr5jrPcRNF
      cgcIgkBWdSOQLmDKAaDfJOeT6LNYLGSfAiL0rIlLIl+AqV+YWpiXdAKpGD8BA5zCoU8AAFyO
      xxi5LpgQcBqio8hRIn6yyevpjWqWF0WJAtjxK6hKNHmhkyRB2Fi2VLOsCiL+v3779qglUYDT
      DnBCg5soQlqWyBuPLvCuLxgAmRif5zkyrWw72e/pt5rIkqYp0jTdsiqpOwllgVF2GO0qelWK
      KM+PTvzAyQ9wQgOHMaR5jrPRCH7jeSWTJBFnFEUyiUZ1nKlJMVmWwXEcWSSXqsG1gSI/adUn
      JlAZyW/6qjHs3wGm976PfL0TPlCU6zVSz8Oac2SN7E1tWX3flys6lT+k1Z1i/ykXIAgCKeer
      5tI+y46aHUYKOY1nWRZ4kmDseVutZY+Bkwh0AoC6SkVZFNhsNlg+PGC9XqOqKqzXa1msiqI1
      SZafTCbSg0udaRhj8H1/qxy6qctMm31fZRjahSzLwnQ6NRYSe/R9H/2KJ3yQEJ4HeB5cx8Gn
      Z2dYrVYYj8cYj8eSiEm8Ad5ZftRG3aqXmpRkaqChJsjLMTucXIzVjfjOz8/lZ6HrHp0JTjvA
      zxhqiHUlBHhjWs2brpB6lCdFaFIQnOu6UvGlej5JkiBJEgRBIGN45k3HSzJ/EvPoHl8A0iyq
      Jt1IhbkpAnZMnBjgZwyTXV0A+LapZK3nCgC1whtFkSy0BdQESsk0o9FoK5eXQq9d15WfUz0i
      Mq0mSYKiKKTZla7r+/5W6caJ7yNwHDhHLJB7YoATdlBwjqhpWqFCzSBTwxhIWSbrDcnvZVnu
      lGNXA90sy5JJNkEQyAK9FENE4pMs8GVZWIxGR3WInRjghB0w1OKRmqlFqzVlhlFCPBEr5Rmr
      UaNCiNY2qLS7JEkiY//zPJc7C+Un024jI0OD4KDYpzaclOATdjByXcyUMAU1/p9W+a5GFgCk
      OGMC6QMApJkTwFZ/ArIo0TVoLLthgsf0BlZx2gFO2MG08fhSjL5lWbi9vd3qAWbSDwh6qISO
      LMsQhmHt4GrihyhuSLUkxXGMOI6lM448yuc9Xer3wWkHOGELDMBDHOOj2WzHZLlarVBVlXR+
      UdFbYoaZ0g1TrQukErXJ9EneXz12yHEc+L6PzWYjGaosS7iOg7MwPMoucGKAE7ZwHoaYh+GW
      uZEU3jiOJeFbloWHhwc4TdgEEbraOYYYgVZ5QhAEsjQiiVV6kV0ywaoFeNfrNcbjMWzbxovp
      FCXndYyQoqsIQM59SJTsiQFO2EJSFDhrOjUSbNuWfb8IjDEIx0FWlhh73laoBIUx0C5AEZ96
      tliapjL3tyxLWYCLFGi6DolUaZrKxtxhGGLkeYhWK7hBUDMMYxC2DSYEiiwbVELdCQz9mk74
      +YIa7gHvRBG1nqiaCTZTSiZOmpBmEnHUxhu2bcvdIwxDuUOQOEUrPDXiE0LIOCJyvpE4RYW6
      PM+D4ziYjMdgTdyS5fsoogiWbcMLQ1Su2xs89/8D76+HO+ncgY4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Growth by Industry' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Rank of State' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAZPklEQVR4nO3deWwkV37Y8W8dfR9sdnM4vMnhXJpDsiTr3F3L2nizRoy1A+RCAAcI7CRw
      EuyugQSB9w8DQWIECPKXgyQIEhiw/0hibKLEgW2tr11HklcraaVZydLsjOYgh+Tw7vu+qurl
      D+qipnua1cOrp36f/1jkq/e6Wb+q93vvVZWmlFII4VH6UTdAiKNk7sdOlFK0y3lo1/djd0Ic
      mn0JAE3TUI6NZlv7sTshDo10gYSnSQAIT9uXAJCBJDGo9iUANE3bj90IceikCyQ8TQJAeJoE
      gPA0SYKFp0kSLDxNukDC0yQAhKdJDiA8Ta4AwtMkCRaeJlcA4WkSAMLTJAkWniY5gPA06QIJ
      T3N9T3Apu0FdjxHUbTS7TSCeJGBKHInB5CoAlN1mbWUZNXwKrbqFpXxcHk7t5ACahkK6QmKw
      uAqArdUlGraisJUm5W+iTD+wkwQrNNDkSiAGi+b6yXDtGumKg6FamFjokSTRgEmzkEZr1Q6o
      mUIcDPfPBfKFOTF8AC0R4ghIn0V4mkyECU+TiTDhadIFEp4mASA8TQJAeJokwcLTJAkWniZd
      IOFpEgDC0yQHEJ4mOYDwNOkCCU+TABCeJjmA8DS5AghPkyRYeJpcAYSnSQAIT5MkWHia5ADC
      06QLJDxNAkB4muQAwtPcPxhL7IlqVXCWXkO1q+jTz6PHp466SaID949G7EIejfgp1arQ/pN/
      hiqt7WwwAvj+ym+gj1462oaJe3TtAq1tbJHNFw6zLQ8NZ+mVTw9+ALuJ/eP/dXQNEl11DIDF
      5VVe/u5f8J9/+9uUK9XDbtPAU63Kvdva8j0eRx0DYGV1gw9vLvJPf+nvEotGeu5EkuDd9Knn
      Qfft2mbMvnBErRH30zEHWFndAA1mJsf3vCPJAXZzNt7FuvYStKvocy9inP8FNHl/wrEjSbDw
      tK7DoO++8ecQHyMeTnD61MRhtkmIQ9P1mpzNFXj3re+zXbg3oRPiYdHxCqCUw8TcWR596nny
      xXrPnUgSLAZVxytAYesu33/9Dd658i7x5ImeO5HVoGJQdQyA4bFZnrg4TzG7TaYo49fi4dU1
      B7A1P9FokFI2c5jtEeJQdc0BEqlRLly8wPp2uedOJAcQg6prDvDKK6/w/R/8kFhypOdOJAcQ
      g6pjAGzlKvz9v/e3KeYylKuNw26TEIemYwAUs5v83997mZ/52s+T29r4ZLuyLTbW16k32zSb
      TdrNBm1Huj9icHVcCmFbLar1NtGQj7YyCPgMAFqNKqVqjdX1NLGwn3qtziOXLmPqmiyFEAOp
      YxK8traBAmIzM/g/s90fjFC4s4AvGCe/vUwgMYWhgW3bKE1H6XKDmRgsHY9Yu17ke6+/w/yp
      OU5f+Almx1MA1Eo5msrE1GB85gya1aDatIkGTSzloDnWYbZdiAfWMQBOPfIYZ1eWyBXzlCuf
      LoUIx5Ncupg8tMYJcdC6ToQppRMJB3FkjF88xLreD6CUwrJsTJ9Jr1F+pRStYkaSYDFwul4B
      rl29SmZtkQ/vrPfciUyEic9S9QJO7jaq3Xsl8VHrmAOsLFxn8cb7/M8P1/nlf/gPDrtNu6hW
      FVplCA6jmYEjbYu4P6UUzq2Xsd79bbAaEEri+9K3jvXjYDpeAVKjExi6zslkhNwR3RCjlMJe
      fo3WH/wKrd//R7S/8w2c7K0jaYvYo1oG68pv7Rz8APUc1g//E8qxj7Zd99ExACKxIUKxYb76
      1a8yN9F7LdCBaJWx3vhNaORBOajyGtab/x4lQ63HliqtgtO+d5vdOqIW9dY1B5ieHGdtbY1K
      rfdaoINYDaoKy2A3d28rrnx6dhHHjpaYA2N3N1UbngfD37nAMdA1AG7duMbS4g2W13vfD3AQ
      SbAWn7rn2TpabOKeL1gcI8EE5nPfhOAwaDra0Azmc99E042jbllXXe8HmD33KObSDaKhIzrg
      ggnMp/8J1nu/A44FvjDms19HM3w9i3qeUii7BcoBM3hoo3SapmHMvYg+8TS0KhAaRjvGZ3/o
      EgA/+sErrGxlyeXLTF8OHXKTdmiahnHmZzHO/OyR1D+olFLY117Cvv5/wGqiTz+P+ew3D3UE
      TfNHwN/7iYLHQccuUL5QAAXlag1D792/f1jvCFNWE6e4gmoUj7ope6Y23sV+73egWQK7ibP0
      CvbV3z3qZh1bHa8AL3zl52hbO0NXfn/vM8fDOBHm5G5jff/fosqb4AthPv5L6Gf/2rH/rE76
      6r3btu/dJnZ0vAL4A0E+fO9NbiwusXR367DbdOSUcrDe+o+o8gagoF3DuvJfoXr8vwstNrmn
      bWJH11GgfL7AlTdeI1sa3PU9qlXFvvXHWNdewimtuijooAp3dm9z2qjCyv428D6c7R9jXf02
      9vJrruY+9NkX0Cef/eRnLTaB+dgvHkQTHwpd72AZGx+nYptYzTKWozD1433p/zzVqtL+03+B
      Ki4DYL//P/B9+V+hn3y0d2FNRxueR2VvfrpN96ElZg+otZ+hFPbNP8S68l/go9xKn/4i5k99
      a09Pl9YMH+ZP/zoqvwjtOlrq3OAsIVEKe+0tnKXXwBfCOPc19MQc7LHbqdo1nLW3wW6hT/wk
      Wqj30v2u3+hWtsSzT11m7fpfsrBZ6tHu45cEO8uvfXLwA67e0qJpOuYzX9/pOmg6+KOYT/1j
      iIweUGs/pZSNdfXbnxz8AM7d13cO6D3SNB09eQb95KODc/AD9srrWK/9G5zlV3Fu/zHt734L
      tcdup2qWaf/Zr2G9/u+w3vxNWt/5Jk5huWe5rleA07OTvP/BbZ5+8a8ymgrfdyfHMTHs+JaW
      Vu9nHH1MT57G93P/AWppCMTRAvH9bF53yoF2h25nh89zYE2wWztXPzOINjx/aO81sG//0c7n
      /1irgr38Gualv9O77OJ3d58kGnnsay+hf+Gf37dc10+2uHCL1ZUFtksW0cDgTT7pU8/eMwWv
      u3xLi2YG0OJTh3fwA+g+9Onndm+LjKKlzh9K9aqapv2db9D+s1+j/Ue/ivXqb+xMqh2GjoG2
      x+Cr5/e2ba97T43PMJoaxmAwF5/pQzP4XvyXaCd/Am34NMYTv4xx/heOulk9aZqG+czXd94o
      k5hDn/4Cvi//azTf4UxIWh/87s4Cto84az/EWXr1UOo2zn0NtM8smwgOYZx6cU9l9cmn7wkg
      feq5Ln/9qa53hH3vT77DE8/9FLFIGJ95/7UcSinefvsdFhb23k8dBAq1qy/uBWrpVVRt9/ov
      beQ82ujlw6l/++pHw8+gjV7aWf+1R87GFajldn4wA+gzX9wdUB10DYArP/h/rOeqXHr8Wean
      ej8ivdYo4ah2z78bJI1mGdt5uD5TL74f/XfMD1765DZYBbR+5texp37yKJt1YLp2gerVMqmx
      CarFvS8DsBsF3nj7et+Nqec3efPt97l2Y6nj79fWNu7ZllldYeGjybo7195nPVdldWmZNrBx
      d4XGRz24pVs3+eD965QrZfKfmduwWnXy8gj4T7Qf+1vY8z+NMgKoQIz2E7+IPfnkUTfrwHR/
      kpWm88E7b/Dsl//6nne2ejfNcEwnl01TqkOzkmVpcY1sK0g84DA7P49TWqXshBiJaGQyJSZm
      xrizuMLs+cuM+RsEY8M4Vp2tu3d49+odLj0yw0a2xlAyRXlrmYYFp6ZSvHvlfTCDtArbjJy7
      BCia+GhsbWDabRTQqFX5+MmNttVG9wWpZDa4tlTk8vlx3n/vBtNzY6xuVpkZi7KyssH0zASb
      uRrPPP1Ez4cBPJTMAK0v/So89ys74+9GYM/j8IOo6xWgVqsxNDTEW69+j2yl2e3PPkORzmRp
      VkpkKg65lQ8pqwg311u09QiZeoC1fItSw6RVr2KjkxyKUC6WGJ2cZigaBKBeKuDoPrazRRIB
      g6qtOHP+LIZycGwbR4GybXyhGAEDkqPjTE+dpJHfYCvfIJ3OYimHWrWGoxzqtTqOoxgeHSOq
      N6gRYmx8lGwmT2ooiBaIMj4+SrVcZXZ+jkRyhJEIZArH/4buA6Np4AuBGXyoD364Tw7wp3/w
      v1Gmn3ZLceG5Fzl9svtQoFKKeqNEtV4hFApQrzexWi2ubVisrGxi4yMQ8GP6fCT9VS6eHaew
      scQHtzb5yldfIL+9TerkOD7NwsKH1ayhHItKzSKRiGL6/FiWtTNTaNuEI2GK2Qz4wgR9Gv5Q
      iHa9jhkMYreaNJtNMpkiqZEhsrkSk1OTtKpFitU2E+MjbG1sEY1HKVfqJFNJCuk0iVSS7e0s
      o6NJtrdzTE5N0Gp5Lwfwmq4BsHDjGqmJWYaiO5NgvSa7ytUsbXv3WfPlNza4tbZ7AucLl1I8
      c2Ewni5n2S2UOr43dIsH1zUHiEUCvPTffotLX/x5nn9svueObKdN29odAOMpjd/7i23sjzri
      4YDB33xh5J6/E+KodA2A5eVlJubOMZqM9r3zy6fifONvnOGt61l8hs6Lj5/g5PDgrE0RD7+O
      AfDmn7/MSq5FvWXxlbHej0VRSnVcEKdpGhfn4lycO8SlBEK40HEU6OLjTzMSD2I3q6xt5fa0
      o+O4IE6IXromwTsUjqPQ9d4LkgrlTZrtva+2FOI46PFKFw19wG6EEcKNw1noLcQxtS8B0C0J
      FuK425cA0DRNkmAxkKQLJDxNAkB42j7mAPuxJyEO175dASQDEINo35JgiQAxiCQHEJ7WYyZ4
      t2atxO07d1FGgGjQpN2oMX3mEYKmxJEYTK4CIBCKMRT2o0IJNu9cJTg8S8DQsG0bDQNdO95v
      AxHi81wFQH59kYWtEmfnkyRHp7EbZWotm0jARGHjqOP7NkAhOumxGnQ3pRxs20HTdfTPzPxq
      miarQcVAcnUF0DQdU/r74iGybxNhQgyifTudSxCIQSSrQYWnSYdeeJoEgPA0uSNMeJrkAMLT
      pAskPE0CQHia5ADC0/bxjjDJAcTgkTvChKdJDiA8TQJAeJokwcLTZCJMeJp0gYSnSQAIT9u/
      O8IkBRADaP/uCJMIEANIkmDhaZIDCE+TABCeJhNhwtMkBxCeJl0g4WkSAMLTJACEp0kSLDxN
      kmDhadIFEp4mASA8TXIA4WmSAwhPky6Q8DQJAOFpEgDC01wFgGO3+cv33qVlw/b2NtvrqzQs
      R5JgMbBcBYByFOGQH9uBlcUbbJcaBExdkmAxsFwFgOHz49N3iiRGRrGbdTnzi4Hm6kXZzWqJ
      atNma2uTsbFJfLqi0bIJB1ztRohjQ1MPeApXSuE4DtV6gbZd3692CXEoHjgAPmbbNoZhdPzd
      x1V0yxPuV/bj8vfLMQa1bsdxAND1zj3RB6m7V3mpe6fufRsG7fZhPmbb9ieVuyr78RWmWqVb
      qN6vvOM4WK0mzZblvm52vkzLsnC6VH6/8hrgODa2bXd8alKvwQPHcahWKn19bqvd7vq7vdTN
      A3xulKJSLpHN5un0H9/LoIllWf0dL3Q/4XSqe9867/er9PrVH5ErNokPp3js0nlXZauFLe7c
      3SRXbPP0l54i1OFNHPcrf+vmTZRysJXO5UsXXJUFix++/iq2Mpk4+wSnxuOuyq8t3uDDtQzx
      aJSnnnzcZd1tPrx6DdtpEBk5y+nppKvyrUaVu+ubtG2Yn58nHPS7qBuuvPEKTfycnD7HmZlR
      V3VXc5ssZ+qcSMQ6/r5X3dc+eId8oUlidJzLj5zec/l6uUzDaVMqlPGHooyPpnqWPZTsNZEc
      w+crYISirsuGYsMoLcOpuRH8vf98F8dxOJEaomYZBHzdL5nd6UzOnKaQzxAKuC8fisaYHjdo
      2/0MEZsEAiaR2ATBIfffm9Vuoxt+psZGyGWzhCfHXZUfn54nn88TCbn91sEXDtGobJJzbFIn
      T7juZgwlx/CZBcxQyFW5UCxGeXWJcrWO2VYdA+DzDmUmuFYugOEnGo24Ltso51lbWmV5dZ37
      X9Q7lK3XMP0hdGVh+tz/I0FRrZQxAxFCfYx0BcMRUDbNVquPuttsra+xtLxMvuR+cEEpBw2H
      zXSeKZcHP0CtWsbwBwkG3X9vum5iKEXLsV2/OavdrHH71m3MQJBKteq67kq5BJrG+soiW5lC
      77a6rqEPtVqVtmVhd+nT3U8gEuexJy4SCUfxuSwbjkTJZ7YolUpspbOu6wZFqVQlFAph6u7P
      4rVygfXNLFNTU33U7ePMxcskYjES8aCrkq16mfWtLKurq/h8/V3ki6Xyzue+T7LZTaNSom1Z
      lIsl1yctwxfg7JnT+PxhLp4/47ruiZlZDOVw6bEnOZG8t8v6eYcSAJpuMpxIEA4GXJe1Wk1a
      lkWtWu+YUPWi6zqarqP3NVNtkExEyGayNG33g2XBSIwTw3HSmUwfddvUaw3aVpNm091h5A/F
      GAoHeeZLL4DV6KNuSA4PkctlaXQZPLifYCxBMjXMUDxKs1JzVVbXDQqFPKGgwc3bd1zXvbZy
      l4m5eTbWlrsm8Lvqc11DH+ZP35vI7JVuGKTTeSbGR/oqH43GcBybSB/dL7AolauEgzqZTMV1
      adMw0E2TWNR9Hx40KsUcI6Mn6ecVnNFYmDs3b+Dobq+bO8qlIv5ggHwu77psvZiDYBzTanFz
      4bbrE1ciHiOTzZNIJFyVU0qRHBlhY2UZn89Hvtj7f3YoAbC4cJOFhTvcWVpxXVahEQoFaDSa
      fb2JdTudYXJqmlSi9+XwXj4uPfY4ieETzHUYhella22NiflzFLNbfdQNpj9AsVQjEnLfjTED
      IWLRSM/h0G4eefRJTiQSzEy7zx+iqTFULY8eHeL09JTr/5vuCxLyG9i2u6tPs1pFDwSJRiOc
      GB3nRHKod10u29aXE6PjBExIJN0fRE67Qb2liETC7hOqVovh4SFWlpdJ54qu6y6VCuQyaVqW
      TbuPA2nq9FkyKwtMzpzqI3gVpXKNSCSC2WPcuxPD8BEOh2nU3XVBAEqlErn0FoVSpev8SXcW
      hXyJQDBE0OdjKJl0/dnLhTRNx6TZcNf2YDRKJZ+nXq+xub29pzKHEgDZTIa50/NUK+67Eb5Q
      FNNpks7mXb+Cw3FsYokU01NTfV0BqsUsNxeWKWU3yRSbrsq2GhVu3VqgZdnkC8U+Xh9ikIgH
      SW+naVrus598JoMvGGR4uPdZ8PPi8TjFUpFGo0ba9eCBScgPuWKJWq3e12tTQuEgygG/333O
      GPCbtJRBPLy3gYMDnwco5bap1Jvo6Rz+oPu+cL2cp1ZtEkoEaeOuwY7dJp3Z6cOGYxDZ45fy
      sfHpOba38xh+Hd3lv9IfjPLIhXsn3vauTblUJRyLkMlVGY66ORhs7txeIDpWIRzqp+sHkVCY
      k+NJlOHuOwOLpYUFSjU4Mey27I5Go87y8gpT8+dcl63WGuiOTbGytxPWgQdAPDnK7FSddL5M
      JOA+oiNDozzx9BDbW1nXE2EPTiMUCmJrBnFXB+CDs22DS48/QXZ7i8Ro5xnV7gzOXzzHZq6E
      1sfwbalUwh8IUCqVSZ5wO3hgcur0GZK2D6dc6OsKkEqN4WhBhlPukmCARCKOVbFIBvd2aB9K
      FyhfKqOsNsWC+xEF226xtHiHYsX9pIhjtanVatRqNZqtfpJBh2K5RjQaxWcc7t2jW2vLrKyu
      kSuU6GcUqFoqYgTChEPuz8LxeBxN0z/Kv2zX5TVDZ315kfV0rq+Bi43NNJNT0wxFw67K1ctl
      HNOHiYWjHZMAqFWKhENRQuEQJ06OuSxts7S4RLVSQTcM12eTyFCKCxcucOHCBabGTrgsDc1m
      m7lTc/j9fvQ+zqQPRNPYWlnG1k1sx/1BmDwxSq1Sod3sbx4gNpRgeDjexzCoRbVukxyKk0q5
      T4ABUsNxVu/epVB2d9ILxWI0K1UcxyaX7z0LDIfQBQqGY0xORWg1qhRrbkcUDKanxyk1YWZy
      7NDv4K8Ui9TqO33JaB+z2A9iYvoUE9On+i6f2U5jA7lslumpSdflVxZvki7UefypZ9zXnd7C
      UqBpZl9doFyhQDAUxehj9EtXNpWmQ+y4dIHS68tc+/AGb77zPqMj7odBzUCEsZE4K3eWcT8n
      +WBSo2PMzs4yOztLpI81MUfFcWym5k+TCJmMTc70tY+WMnnmyQusrm64LKlh6Aam6SMaj9PP
      EkRNKRqtFpbt/qRj+EOkogHaam+H9oEHQHJ0nFgoQChgkM7t7bL0KYsPf3ydbGYd2x9zvRbI
      q+xWnevXb6FrWl8LygCmxk+wtJZjZvqky5I6w8kEGopCvuB6FrhcKjE6NkYkHMbfxzqmRrXI
      Rr6Cau+t63fgAeDzBzl1+gzPP/88o3uYmdtNJzWSRNdN6uVSX2uBvEgpha5bLCyt088SKNuy
      iA6lmJk8ycrKqsvSbW7dXKDVbmPobgePoVkrsZnOUavVaLXdXfPr5TLh5Agj8TCxRO+l0LCP
      t0QeNOU4KE3rc1GbcCOztU6+tHPlSI1OkBzqZx1Vf8qFLFuZHJpmkBo9SSK297qb1RJLH3XZ
      QtEhZiZ7D7oMzOMcNF3va0RBuDdycoIRtz2ffeLz+zEMA8uyaLlehqFwHIXhMwmH93YzjTwa
      URwrhWyGUqWGZdl7Ws78Wb5ghORQDGybfLG0pzIDcwUQ3jA2fYqx6f7K1ooZFlc3GIpFCBl7
      O7QHJgcQ4iBIF0h4mgSA8DQJAOFpEgDC0yQAhKdJAAhPkwAQnvb/AXxZXzx3yZkmAAAAAElF
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Revenue by State' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Revenue per Employee' width='192'>
      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
      j9MNOq7MrRX+Eyy0VRdzpKASg8UzHPxRsdSx5dN3+fOzL5LTdP6nxc5jK1iWU4f1Mh7RZQjA
      QU9zKdtXfsrqTbs5eryA/GOHydldQHv/M/tuWPVU5e5mZ2453bZvT35ZdNdxcMd2jtToznGt
      66Jg61JeeGsjzTpPkLAfE0NNJW3aRG7MlHK08Ptraf1eBnWZuji540t2VWqYcfttjI0LRGzr
      pqVW98M5xFh0nNq7lo3CeKLiY/D+IXZm76pgx+pVyGZFMSzcpy9+rTcJ2TfyYKKKQK0nRMyP
      h4maqk68fEJJHS3jwJJC2q+N4twFcmdPJVuWbaOq3YxyQALjJmSTEKpBBNhN7eTvXM+RUx3Y
      lSGMnDSVjJjeTQL6KQA3hs5ajhyvJ3z0A2TFBaEQA0ofwuP7okI7DZzet5FVO47SYhITnjKB
      WTOnMNhPAhXb+MtHBaTNnUjP7g0cq+1BGz+JW+dMJNpfjr4+lzWfraWg0YCgCmLIxNnMzQrn
      0Ed/ZWlOLe208PeKXSiDRvOrp67DVbCG1bliJt8wlo49K9lcG84DDyax/6P1KEcvYG5mONDJ
      7rde41DIfJ6elQguEzVHtvPFlv3U6lwExWUxMSuKsjWLOVbZgvDxP6jf4E1E2hzuvyMFU2sV
      eSVyhgwZjLdSjKm9gj3rvmBvcTN2RTDp193GTVnhiK3tHN22iqM9kSR66zl66AgtDh9Sp93M
      nEln7Ps9XBb6Vqq6rfgMDCcwKo5U98vkNt/INSFfJakvPc3gcamMTXBQV3yUzZtcyGdPZ7Af
      FK5+jY3tSUwak43Y1ISxx4q9b7jUTwE4MRhO09CpIStyIOqv21i7TRRvXco7m+oZe8tCbgu0
      sXfFO7z9kZH7751DrKGZk4V76QwbzsKZC8lsPcKHn2xjS2Icd2VEsH/5W+RzLfc9kYmmp4qt
      u0tozRrE6FkP0mV4j11kcu+CaUR4KfETQ3lHNWWnLMjWtFNRWoF00GDcth6qSkvQxp8xJ7PR
      cvokRY7p4LZTc2g97352lMhrb+aJ5AA6aotxeSVx46zZnG5ah3TavSwcPQiVygsvHFS01lJc
      rsRsc2IztLH5nX+yXzKOW35+Kz41W3l50fOYFK9wT7yFzoZy9h6qRnvrAm5+aAwt+97kg/Vr
      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
    </thumbnail>
    <thumbnail height='192' name='State Dashboard' width='192'>
      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
      0TD0ZzBxCEWGGQyNXJhbJDpFcDBEPB6n2Q+yb2qEQtMwMRqhUvOYikYJhuGq/ZA+u8r01Z8g
      vF5kOBLBDRkcxyE2McNQOHLJWr15jnfFRmmaMKORAWqeYcfkOA4BQuEgsaEJ/PYmhXKNw/vj
      F87dzMwMAdcl6DhMxCYYGQqfX//P4Hkewbeub6vO6YVFpg7dyMAVuqH/sb0P4LXbhAYH9Vf+
      h0gxnyEwNM5UdPSXOr7d2CK3vsX+fXGcKzSnj20AIu+F3iDFagpArKYAxGoKQKymAMRqCkCs
      pgDEagpArKYAxGoKQKymAMRqCkCspgDEagpArKYAxGoKQKymAMRqCkCspgDEagpArKYAxGoK
      QKymAMRqCkCspgDEagpArKYAxGoKQKymAMRqCkCspgDEagpArKYAxGoKQKymAMRqCkCspgDE
      agpArKYAxGoKQKymAMRqCkCspgDEagpArKYAxGoKQKymAMRqCkCspgDEagpArKYAxGoKQKym
      AMRqCkCspgDEagpArKYAxGoKQKymAMRqCkCspgDEagpArKYAxGoKQKymAMRqCkCspgDEagpA
      rKYAxGoKQKymAMRqCkCspgDEagpArKYAxGoKQKymAMRqCkCspgDEagpArKYAxGoKQKymAMRq
      CkCspgDEagpArKYAxGoKQKymAMRqCkCspgDEagpArKYAxGoKQKymAMRqCkCspgDEagpArKYA
      xGoKQKymAMRqCkCspgDEagpArKYAxGoKQKymAMRqCkCspgDEagpArKYAxGoKQKymAMRqCkCs
      pgDEagpArKYAxGoKQKymAMRqCkCspgDEagpArKYAxGoKQKymAMRqCkCspgDEagpArKYAxGoK
      QKymAMRqCkCspgDEagpArKYAxGoKQKymAMRqCkCspgDEagpArKYAxGoKQKymAMRqCkCspgDE
      agpArKYAxGoKQKymAMRqCkCspgDEagpArKYAxGoKQKymAMRqCkCspgDEagpArKYAxGoKQKym
      AMRqCkCspgDEagpArKYAxGoKQKymAMRqCkCspgDEagpArPY/jiO3gGzwO2sAAAAASUVORK5C
      YII=
    </thumbnail>
  </thumbnails>
</workbook>
